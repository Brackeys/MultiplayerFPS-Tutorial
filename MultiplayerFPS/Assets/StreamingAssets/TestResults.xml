<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" testcasecount="766" result="Skipped:Ignored" total="766" passed="749" failed="0" inconclusive="0" skipped="17" asserts="0" engine-version="3.5.0.0" clr-version="4.0.30319.42000" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:16:10Z" duration="240.714851">
  <test-suite type="TestSuite" id="1908" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="772" result="Skipped" label="Ignored" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:16:10Z" duration="240.714851" total="766" passed="749" failed="0" inconclusive="0" skipped="17" asserts="0">
    <properties />
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="Assembly" id="2801" name="Mirror.Tests.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Mirror.Tests.dll" runstate="Runnable" testcasecount="766" result="Skipped" label="Ignored" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:16:10Z" duration="239.898686" total="766" passed="749" failed="0" inconclusive="0" skipped="17" asserts="0">
      <properties>
        <property name="_PID" value="33767" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="2804" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="749" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:16:09Z" duration="239.075675" total="749" passed="749" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="2807" name="Tests" fullname="Mirror.Tests" runstate="Runnable" testcasecount="572" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:13:42Z" duration="92.052314" total="572" passed="572" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestFixture" id="2134" name="ArraySegmentWriterTest" fullname="Mirror.Tests.ArraySegmentWriterTest" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.072161" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2135" name="TestEmptyByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="407156245" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.032569" asserts="0">
              <properties />
            </test-case>
            <test-case id="2138" name="TestEmptyIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="513398685" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.001849" asserts="0">
              <properties />
            </test-case>
            <test-case id="2136" name="TestNullByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullByteArray" methodname="TestNullByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="752972449" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000897" asserts="0">
              <properties />
            </test-case>
            <test-case id="2139" name="TestNullIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="506464371" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000715" asserts="0">
              <properties />
            </test-case>
            <test-case id="2137" name="TestSegmentByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentByteArray" methodname="TestSegmentByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="117986930" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.003364" asserts="0">
              <properties />
            </test-case>
            <test-case id="2140" name="TestSegmentIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentIntArray" methodname="TestSegmentIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="92255166" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.001765" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2141" name="ArrayWriterTest" fullname="Mirror.Tests.ArrayWriterTest" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.049354" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2144" name="TestDataByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataByteArray" methodname="TestDataByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="2084927632" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.003352" asserts="0">
              <properties />
            </test-case>
            <test-case id="2147" name="TestDataIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataIntArray" methodname="TestDataIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1553555295" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.001636" asserts="0">
              <properties />
            </test-case>
            <test-case id="2143" name="TestEmptyByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1467448515" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000731" asserts="0">
              <properties />
            </test-case>
            <test-case id="2146" name="TestEmptyIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="51658515" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000556" asserts="0">
              <properties />
            </test-case>
            <test-case id="2142" name="TestNullByterray" fullname="Mirror.Tests.ArrayWriterTest.TestNullByterray" methodname="TestNullByterray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1647937695" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000514" asserts="0">
              <properties />
            </test-case>
            <test-case id="2145" name="TestNullIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="303487744" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.000538" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2148" name="BasicAuthenticatorTest" fullname="Mirror.Tests.BasicAuthenticatorTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.013291" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2149" name="AuthRequestMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthRequestMessageTest" methodname="AuthRequestMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="980946476" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.001805" asserts="0">
              <properties />
            </test-case>
            <test-case id="2150" name="AuthResponseMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthResponseMessageTest" methodname="AuthResponseMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="1268532851" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.001108" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2812" name="ClientSceneTests" fullname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="91" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:24Z" duration="14.094271" total="91" passed="91" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2648" name="ClientSceneTests_ClearSpawners" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.081046" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2652" name="ClearsAllDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.ClearsAllDictionary" methodname="ClearsAllDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1388988057" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.022310" asserts="0">
                <properties />
              </test-case>
              <test-case id="2649" name="RemovesAllPrefabsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllPrefabsFromDictionary" methodname="RemovesAllPrefabsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1696261919" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.010619" asserts="0">
                <properties />
              </test-case>
              <test-case id="2650" name="RemovesAllSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllSpawnHandlersFromDictionary" methodname="RemovesAllSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="717487241" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.019062" asserts="0">
                <properties />
              </test-case>
              <test-case id="2651" name="RemovesAllUnspawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllUnspawnHandlersFromDictionary" methodname="RemovesAllUnspawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1252545298" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014680" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2653" name="ClientSceneTests_GetPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.088652" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2658" name="HasOutPrefabWithCorrectGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.HasOutPrefabWithCorrectGuid" methodname="HasOutPrefabWithCorrectGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="764935605" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.011740" asserts="0">
                <properties />
              </test-case>
              <test-case id="2654" name="ReturnsFalseForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForEmptyGuid" methodname="ReturnsFalseForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1534740988" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.019143" asserts="0">
                <properties />
              </test-case>
              <test-case id="2656" name="ReturnsFalseForPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabIsNull" methodname="ReturnsFalseForPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="817186502" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.010684" asserts="0">
                <properties />
              </test-case>
              <test-case id="2655" name="ReturnsFalseForPrefabNotFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabNotFound" methodname="ReturnsFalseForPrefabNotFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="2076344733" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.019237" asserts="0">
                <properties />
              </test-case>
              <test-case id="2657" name="ReturnsTrueWhenPrefabIsFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsTrueWhenPrefabIsFound" methodname="ReturnsTrueWhenPrefabIsFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1614796521" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.015156" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2659" name="ClientSceneTests_PrepareToSpawnSceneObjects" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.163346" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2660" name="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" methodname="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="554796163" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.027164" asserts="0">
                <properties />
              </test-case>
              <test-case id="2663" name="AddsIdentitiesToDictionaryUsingSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsIdentitiesToDictionaryUsingSceneId" methodname="AddsIdentitiesToDictionaryUsingSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="408149296" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.026572" asserts="0">
                <properties />
              </test-case>
              <test-case id="2664" name="ClearsExistingItemsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.ClearsExistingItemsFromDictionary" methodname="ClearsExistingItemsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="220634262" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.030695" asserts="0">
                <properties />
              </test-case>
              <test-case id="2661" name="DoesNotAddActiveObjectsToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddActiveObjectsToDictionary" methodname="DoesNotAddActiveObjectsToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1692581265" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.034880" asserts="0">
                <properties />
              </test-case>
              <test-case id="2662" name="DoesNotAddObjectsWithNoSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddObjectsWithNoSceneId" methodname="DoesNotAddObjectsWithNoSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1107360211" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.030862" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2665" name="ClientSceneTests_RegisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="54" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:19Z" duration="8.838491" total="54" passed="54" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="2733" name="CheckOverloadWithAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.103852" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2727" name="CheckOverloadWithAssetId(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="576545232" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.012078" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2728" name="CheckOverloadWithAssetId(Prefab_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1358733590" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.018773" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2729" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="2127665487" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014457" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2730" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1437709524" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014770" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2731" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1989859712" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014767" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2732" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1426003896" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014699" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2740" name="CheckOverloadWithHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:11Z" duration="0.110259" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2734" name="CheckOverloadWithHandler(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1537619363" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.007914" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2735" name="CheckOverloadWithHandler(Prefab_NewAssetId,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_NewAssetId,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="329500804" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.027147" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2736" name="CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="474457820" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.014724" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2737" name="CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1045904264" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.018848" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2738" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1156094601" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:10Z" duration="0.013641" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2739" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1401472770" result="Passed" start-time="2020-07-30 17:12:10Z" end-time="2020-07-30 17:12:11Z" duration="0.014891" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2684" name="ErrorForNullPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.132131" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2678" name="ErrorForNullPrefab(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1680087201" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.028004" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="2679" name="ErrorForNullPrefab(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1296395680" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.018513" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="2680" name="ErrorForNullPrefab(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="230262351" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.014504" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2681" name="ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="493910725" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.014194" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2682" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="805353018" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.023075" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2683" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="896352257" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.018330" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2691" name="ErrorForPrefabWithoutNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.763076" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2685" name="ErrorForPrefabWithoutNetworkIdentity(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="652643609" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.011203" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2686" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="359810357" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.023058" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2687" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1539870976" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.114633" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2688" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="185342142" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.199040" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2689" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="907583063" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.197520" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2690" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2114034604" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:11Z" duration="0.197323" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2699" name="ErrorIfPrefabHadSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:11Z" end-time="2020-07-30 17:12:12Z" duration="0.692025" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2696" name="ErrorIfPrefabHadSceneId(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="319214967" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:12Z" duration="0.200125" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="2697" name="ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="461406973" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:12Z" duration="0.198267" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="2698" name="ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1511449256" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:12Z" duration="0.196604" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2708" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:13Z" duration="0.494772" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2706" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="100142607" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:12Z" duration="0.199640" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
                <test-case id="2707" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="21339581" result="Passed" start-time="2020-07-30 17:12:12Z" end-time="2020-07-30 17:12:13Z" duration="0.196681" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2726" name="Handler_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:13Z" duration="0.495591" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2724" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="690837478" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:13Z" duration="0.199680" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2725" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="424072854" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:13Z" duration="0.198028" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2672" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:14Z" duration="0.497186" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2670" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="618983895" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:13Z" duration="0.199224" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2671" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="895417593" result="Passed" start-time="2020-07-30 17:12:13Z" end-time="2020-07-30 17:12:14Z" duration="0.198395" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2677" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:14Z" duration="0.493342" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2675" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnDelegate_NewAssetId)" methodname="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2127569508" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:14Z" duration="0.199022" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2676" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="995943807" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:14Z" duration="0.198455" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2695" name="NewGuid_ErrorForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:15Z" duration="0.696416" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2692" name="NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1541073783" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:14Z" duration="0.198990" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="2693" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1690370129" result="Passed" start-time="2020-07-30 17:12:14Z" end-time="2020-07-30 17:12:15Z" duration="0.198733" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="2694" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="951318357" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:15Z" duration="0.197866" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2667" name="Prefab_AddsPrefabToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:15Z" duration="0.295010" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2666" name="Prefab_AddsPrefabToDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary(Prefab)" methodname="Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="18738696" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:15Z" duration="0.196517" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2705" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:15Z" duration="0.297983" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2704" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" methodname="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="971801035" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:15Z" duration="0.198739" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing prefab with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'. Old prefab 'ValidPrefabForClientScene', New prefab 'ValidPrefabForClientScene'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2669" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:15Z" end-time="2020-07-30 17:12:16Z" duration="0.298256" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2668" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" methodname="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="863710976" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:16Z" duration="0.199045" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2674" name="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:16Z" duration="0.297731" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2673" name="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab(Prefab_NewAssetId)" methodname="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="210897806" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:16Z" duration="0.200301" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2714" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:16Z" duration="0.296716" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2713" name="SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="705286278" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:16Z" duration="0.199248" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2716" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:17Z" duration="0.297968" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2715" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="82594561" result="Passed" start-time="2020-07-30 17:12:16Z" end-time="2020-07-30 17:12:17Z" duration="0.199741" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2719" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:17Z" duration="0.497420" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2717" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1912431779" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:17Z" duration="0.199117" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2718" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="616629013" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:17Z" duration="0.197944" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 5794128c-dfda-0454-2985-151f82990d05
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2721" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:17Z" duration="0.294809" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2720" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1355292190" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:17Z" duration="0.198695" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2723" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:17Z" end-time="2020-07-30 17:12:18Z" duration="0.298810" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2722" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="247100606" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:18Z" duration="0.199244" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2712" name="WarningForAssetIdAlreadyExistingInHandlersDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:18Z" duration="0.698441" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2709" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="772981224" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:18Z" duration="0.200442" asserts="0">
                  <properties />
                  <output><![CDATA[Adding prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' when spawnHandlers with same assetId already exists.
]]></output>
                </test-case>
                <test-case id="2710" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2036456083" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:18Z" duration="0.198287" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
                <test-case id="2711" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="828550756" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:18Z" duration="0.197423" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2703" name="WarningForNetworkIdentityInChildren" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:18Z" end-time="2020-07-30 17:12:19Z" duration="0.692959" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2700" name="WarningForNetworkIdentityInChildren(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2031874949" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:19Z" duration="0.198724" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="2701" name="WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1970116007" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:19Z" duration="0.198136" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="2702" name="WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="680126042" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:19Z" duration="0.198910" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="2741" name="ClientSceneTests_RegisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" testcasecount="15" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:22Z" duration="3.033848" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2742" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1003628424" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:19Z" duration="0.199927" asserts="0">
                <properties />
              </test-case>
              <test-case id="2743" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="327289809" result="Passed" start-time="2020-07-30 17:12:19Z" end-time="2020-07-30 17:12:20Z" duration="0.197536" asserts="0">
                <properties />
              </test-case>
              <test-case id="2744" name="SpawnDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="927175585" result="Passed" start-time="2020-07-30 17:12:20Z" end-time="2020-07-30 17:12:20Z" duration="0.197311" asserts="0">
                <properties />
              </test-case>
              <test-case id="2747" name="SpawnDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="325748496" result="Passed" start-time="2020-07-30 17:12:20Z" end-time="2020-07-30 17:12:20Z" duration="0.198658" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="2749" name="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1799814042" result="Passed" start-time="2020-07-30 17:12:20Z" end-time="2020-07-30 17:12:20Z" duration="0.198051" asserts="0">
                <properties />
                <output><![CDATA[assetId '60779258-5390-4c86-b48b-53012e4c8d30' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="2745" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="886754020" result="Passed" start-time="2020-07-30 17:12:20Z" end-time="2020-07-30 17:12:20Z" duration="0.197596" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for feb81901-701e-4bc9-b1d8-cb5a8781bcfc
]]></output>
              </test-case>
              <test-case id="2746" name="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="2114666104" result="Passed" start-time="2020-07-30 17:12:20Z" end-time="2020-07-30 17:12:21Z" duration="0.197644" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for ad72708e-b0d7-4805-8bcf-21f87f6d0a73
]]></output>
              </test-case>
              <test-case id="2748" name="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="906148234" result="Passed" start-time="2020-07-30 17:12:21Z" end-time="2020-07-30 17:12:21Z" duration="0.198025" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for 3d15e116-b176-4f77-8af7-c14b509af27e
]]></output>
              </test-case>
              <test-case id="2750" name="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1000686430" result="Passed" start-time="2020-07-30 17:12:21Z" end-time="2020-07-30 17:12:21Z" duration="0.198206" asserts="0">
                <properties />
              </test-case>
              <test-case id="2751" name="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="541875075" result="Passed" start-time="2020-07-30 17:12:21Z" end-time="2020-07-30 17:12:21Z" duration="0.199046" asserts="0">
                <properties />
              </test-case>
              <test-case id="2754" name="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1311326955" result="Passed" start-time="2020-07-30 17:12:21Z" end-time="2020-07-30 17:12:21Z" duration="0.197309" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="2756" name="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="372094921" result="Passed" start-time="2020-07-30 17:12:21Z" end-time="2020-07-30 17:12:22Z" duration="0.198394" asserts="0">
                <properties />
                <output><![CDATA[assetId '435bb872-75c7-42a3-8216-d024cfca9b2f' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="2752" name="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="931106909" result="Passed" start-time="2020-07-30 17:12:22Z" end-time="2020-07-30 17:12:22Z" duration="0.198816" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for f3193093-fcb2-497f-8aca-af512d8ef47b
]]></output>
              </test-case>
              <test-case id="2753" name="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="84639895" result="Passed" start-time="2020-07-30 17:12:22Z" end-time="2020-07-30 17:12:22Z" duration="0.197466" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for 22f99ac3-4543-4b59-b37a-3656cd940188
]]></output>
              </test-case>
              <test-case id="2755" name="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="647372555" result="Passed" start-time="2020-07-30 17:12:22Z" end-time="2020-07-30 17:12:22Z" duration="0.198616" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for d9f8446a-7ab0-47c2-a738-b0946cd30f6d
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2757" name="ClientSceneTests_UnregisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:22Z" end-time="2020-07-30 17:12:23Z" duration="1.083814" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2762" name="ErrorWhenPrefabHasNoNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabHasNoNetworkIdentity" methodname="ErrorWhenPrefabHasNoNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="886198925" result="Passed" start-time="2020-07-30 17:12:22Z" end-time="2020-07-30 17:12:23Z" duration="0.199732" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
              </test-case>
              <test-case id="2761" name="ErrorWhenPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabIsNull" methodname="ErrorWhenPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="763409928" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:23Z" duration="0.197351" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister prefab because it was null
]]></output>
              </test-case>
              <test-case id="2758" name="RemovesPrefabFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesPrefabFromDictionary" methodname="RemovesPrefabFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="982548805" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:23Z" duration="0.199248" asserts="0">
                <properties />
              </test-case>
              <test-case id="2759" name="RemovesSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesSpawnHandlerFromDictionary" methodname="RemovesSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="132267667" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:23Z" duration="0.198794" asserts="0">
                <properties />
              </test-case>
              <test-case id="2760" name="RemovesUnSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesUnSpawnHandlerFromDictionary" methodname="RemovesUnSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1969163553" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:23Z" duration="0.197959" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2763" name="ClientSceneTests_UnregisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:24Z" duration="0.694428" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2766" name="DoesNotRemovePrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.DoesNotRemovePrefabDictionary" methodname="DoesNotRemovePrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="1954530238" result="Passed" start-time="2020-07-30 17:12:23Z" end-time="2020-07-30 17:12:24Z" duration="0.199797" asserts="0">
                <properties />
              </test-case>
              <test-case id="2764" name="RemovesSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesSpawnHandlersFromDictionary" methodname="RemovesSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="202143594" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.197129" asserts="0">
                <properties />
              </test-case>
              <test-case id="2765" name="RemovesUnSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesUnSpawnHandlersFromDictionary" methodname="RemovesUnSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="254966509" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.198426" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2151" name="CustomAttrributeTest" fullname="Mirror.Tests.CustomAttrributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.111720" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2154" name="ClientRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.ClientRPCAttributeTest" methodname="ClientRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="539791402" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.001116" asserts="0">
              <properties />
            </test-case>
            <test-case id="2153" name="CommandAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.CommandAttributeTest" methodname="CommandAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="382131774" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.000724" asserts="0">
              <properties />
            </test-case>
            <test-case id="2156" name="SyncEventAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncEventAttributeTest" methodname="SyncEventAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1143911073" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.000925" asserts="0">
              <properties />
            </test-case>
            <test-case id="2152" name="SyncVarAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncVarAttributeTest" methodname="SyncVarAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1236752981" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.000651" asserts="0">
              <properties />
            </test-case>
            <test-case id="2155" name="TargetRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.TargetRPCAttributeTest" methodname="TargetRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1577130068" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.000598" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2157" name="CustomRWTest" fullname="Mirror.Tests.CustomRWTest" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.094210" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2158" name="TestCustomRW" fullname="Mirror.Tests.CustomRWTest.TestCustomRW" methodname="TestCustomRW" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" seed="674571100" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.001644" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2159" name="EnumReadWriteTests" fullname="Mirror.Tests.EnumReadWriteTests" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.103323" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2160" name="ByteIsSentForByteEnum" fullname="Mirror.Tests.EnumReadWriteTests.ByteIsSentForByteEnum" methodname="ByteIsSentForByteEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="998101946" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.001168" asserts="0">
              <properties />
            </test-case>
            <test-case id="2162" name="CustomWriterIsUsedForEnum" fullname="Mirror.Tests.EnumReadWriteTests.CustomWriterIsUsedForEnum" methodname="CustomWriterIsUsedForEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="2024922224" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.002539" asserts="0">
              <properties />
            </test-case>
            <test-case id="2161" name="ShortIsSentForShortEnum" fullname="Mirror.Tests.EnumReadWriteTests.ShortIsSentForShortEnum" methodname="ShortIsSentForShortEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="78665134" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:24Z" duration="0.000906" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2163" name="ExponentialMovingAverageTest" fullname="Mirror.Tests.ExponentialMovingAverageTest" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:24Z" end-time="2020-07-30 17:12:25Z" duration="0.087054" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2164" name="TestInitial" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestInitial" methodname="TestInitial" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="1000789076" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.003022" asserts="0">
              <properties />
            </test-case>
            <test-case id="2165" name="TestMovingAverage" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestMovingAverage" methodname="TestMovingAverage" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="437972259" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.001550" asserts="0">
              <properties />
            </test-case>
            <test-case id="2166" name="TestVar" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestVar" methodname="TestVar" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="957571275" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.000568" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2167" name="FallbackTransportTest" fullname="Mirror.Tests.FallbackTransportTest" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:27Z" duration="1.988881" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2168" name="TestAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="2110777735" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.296860" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2174" name="TestClient1Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1180357350" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.195858" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2175" name="TestClient2Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1508268984" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:25Z" duration="0.197324" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2173" name="TestClientSend" fullname="Mirror.Tests.FallbackTransportTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="2008486896" result="Passed" start-time="2020-07-30 17:12:25Z" end-time="2020-07-30 17:12:26Z" duration="0.196833" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2170" name="TestConnect" fullname="Mirror.Tests.FallbackTransportTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1853081100" result="Passed" start-time="2020-07-30 17:12:26Z" end-time="2020-07-30 17:12:26Z" duration="0.196982" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2171" name="TestConnected" fullname="Mirror.Tests.FallbackTransportTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="521560273" result="Passed" start-time="2020-07-30 17:12:26Z" end-time="2020-07-30 17:12:26Z" duration="0.196846" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2172" name="TestDisconnect" fullname="Mirror.Tests.FallbackTransportTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="841050636" result="Passed" start-time="2020-07-30 17:12:26Z" end-time="2020-07-30 17:12:26Z" duration="0.197982" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2169" name="TestNotAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1848577336" result="Passed" start-time="2020-07-30 17:12:26Z" end-time="2020-07-30 17:12:26Z" duration="0.197016" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2176" name="TestServerConnected" fullname="Mirror.Tests.FallbackTransportTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="757866274" result="Passed" start-time="2020-07-30 17:12:26Z" end-time="2020-07-30 17:12:27Z" duration="0.196152" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2811" name="GeneratedWriterTests" fullname="Mirror.Tests.GeneratedWriterTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:27Z" duration="0.388385" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2646" name="FieldsInBaseClasses" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:27Z" duration="0.302440" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2647" name="WriterShouldIncludeFieldsInBaseClass" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses.WriterShouldIncludeFieldsInBaseClass" methodname="WriterShouldIncludeFieldsInBaseClass" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" seed="1595296722" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:27Z" duration="0.199488" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2177" name="LocalConnectionBufferTest" fullname="Mirror.Tests.LocalConnectionBufferTest" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:28Z" duration="1.095314" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2180" name="BufferCanWriteAndReadPackages" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteAndReadPackages" methodname="BufferCanWriteAndReadPackages" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1662508610" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:27Z" duration="0.197011" asserts="0">
              <properties />
            </test-case>
            <test-case id="2182" name="BufferCanWriteReadMorePackageAfterCallingReset" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteReadMorePackageAfterCallingReset" methodname="BufferCanWriteReadMorePackageAfterCallingReset" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1516242197" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:27Z" duration="0.197202" asserts="0">
              <properties />
            </test-case>
            <test-case id="2179" name="BufferHasNoPacketsAfterWriteAndReading" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasNoPacketsAfterWriteAndReading" methodname="BufferHasNoPacketsAfterWriteAndReading" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1822723621" result="Passed" start-time="2020-07-30 17:12:27Z" end-time="2020-07-30 17:12:28Z" duration="0.199191" asserts="0">
              <properties />
            </test-case>
            <test-case id="2178" name="BufferHasPacketsAfterWriter" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasPacketsAfterWriter" methodname="BufferHasPacketsAfterWriter" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1768369992" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.198874" asserts="0">
              <properties />
            </test-case>
            <test-case id="2181" name="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" methodname="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="828520261" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.198268" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2183" name="LocalConnectionTest" fullname="Mirror.Tests.LocalConnectionTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.293538" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2184" name="ClientToServerFailTest" fullname="Mirror.Tests.LocalConnectionTest.ClientToServerFailTest" methodname="ClientToServerFailTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" seed="1825523827" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.198650" asserts="0">
              <properties />
              <output><![CDATA[LocalConnection.SendBytes cannot send zero bytes
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2185" name="LogFactoryTests" fullname="Mirror.Tests.LogFactoryTests" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.114703" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2187" name="DifferentClassDifferentLogger" fullname="Mirror.Tests.LogFactoryTests.DifferentClassDifferentLogger" methodname="DifferentClassDifferentLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="614466336" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.001864" asserts="0">
              <properties />
            </test-case>
            <test-case id="2189" name="LogDebugFull" fullname="Mirror.Tests.LogFactoryTests.LogDebugFull" methodname="LogDebugFull" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1717799119" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.010115" asserts="0">
              <properties />
            </test-case>
            <test-case id="2188" name="LogDebugIgnore" fullname="Mirror.Tests.LogFactoryTests.LogDebugIgnore" methodname="LogDebugIgnore" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1655628008" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.001339" asserts="0">
              <properties />
            </test-case>
            <test-case id="2186" name="SameClassSameLogger" fullname="Mirror.Tests.LogFactoryTests.SameClassSameLogger" methodname="SameClassSameLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1499994897" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:28Z" duration="0.000623" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2190" name="MessageBaseTests" fullname="Mirror.Tests.MessageBaseTests" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:28Z" end-time="2020-07-30 17:12:29Z" duration="0.090121" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2191" name="Roundtrip" fullname="Mirror.Tests.MessageBaseTests.Roundtrip" methodname="Roundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="502822961" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.002887" asserts="0">
              <properties />
            </test-case>
            <test-case id="2192" name="WovenSerializationBodyRoundtrip" fullname="Mirror.Tests.MessageBaseTests.WovenSerializationBodyRoundtrip" methodname="WovenSerializationBodyRoundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="1644306654" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001867" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2810" name="MessageInheritance" fullname="Mirror.Tests.MessageInheritance" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.200677" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2642" name="MessageInheritanceTest" fullname="Mirror.Tests.MessageInheritance.MessageInheritanceTest" classname="Mirror.Tests.MessageInheritance.MessageInheritanceTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.106172" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2643" name="SendsVauesInParentAndChildClass" fullname="Mirror.Tests.MessageInheritance.MessageInheritanceTest.SendsVauesInParentAndChildClass" methodname="SendsVauesInParentAndChildClass" classname="Mirror.Tests.MessageInheritance.MessageInheritanceTest" runstate="Runnable" seed="637624113" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.002245" asserts="0">
                <properties />
              </test-case>
              <test-case id="2644" name="SendsVauesWhenUsingAbstractClass" fullname="Mirror.Tests.MessageInheritance.MessageInheritanceTest.SendsVauesWhenUsingAbstractClass" methodname="SendsVauesWhenUsingAbstractClass" classname="Mirror.Tests.MessageInheritance.MessageInheritanceTest" runstate="Runnable" seed="1544965534" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001416" asserts="0">
                <properties />
              </test-case>
              <test-case id="2645" name="SendsVauesWhenUsingAbstractClassReverseDefineOrder" fullname="Mirror.Tests.MessageInheritance.MessageInheritanceTest.SendsVauesWhenUsingAbstractClassReverseDefineOrder" methodname="SendsVauesWhenUsingAbstractClassReverseDefineOrder" classname="Mirror.Tests.MessageInheritance.MessageInheritanceTest" runstate="Runnable" seed="2062619539" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001213" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2193" name="MessagePackerTest" fullname="Mirror.Tests.MessagePackerTest" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.100618" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2194" name="TestPacking" fullname="Mirror.Tests.MessagePackerTest.TestPacking" methodname="TestPacking" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1152633527" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.002637" asserts="0">
              <properties />
            </test-case>
            <test-case id="2196" name="TestUnpackIdMismatch" fullname="Mirror.Tests.MessagePackerTest.TestUnpackIdMismatch" methodname="TestUnpackIdMismatch" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="402299993" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001028" asserts="0">
              <properties />
            </test-case>
            <test-case id="2197" name="TestUnpackMessageNonGeneric" fullname="Mirror.Tests.MessagePackerTest.TestUnpackMessageNonGeneric" methodname="TestUnpackMessageNonGeneric" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="2100107022" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001256" asserts="0">
              <properties />
            </test-case>
            <test-case id="2198" name="UnpackInvalidMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackInvalidMessage" methodname="UnpackInvalidMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1451934112" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001530" asserts="0">
              <properties />
            </test-case>
            <test-case id="2195" name="UnpackWrongMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackWrongMessage" methodname="UnpackWrongMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="583269131" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001136" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2199" name="MessageTests" fullname="Mirror.Tests.MessageTests" classname="Mirror.Tests.MessageTests" runstate="Runnable" testcasecount="17" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.127202" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2200" name="CommandMessageTest" fullname="Mirror.Tests.MessageTests.CommandMessageTest" methodname="CommandMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1963834529" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.003163" asserts="0">
              <properties />
            </test-case>
            <test-case id="2201" name="ConnectMessageTest" fullname="Mirror.Tests.MessageTests.ConnectMessageTest" methodname="ConnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1145538504" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.002460" asserts="0">
              <properties />
            </test-case>
            <test-case id="2202" name="DisconnectMessageTest" fullname="Mirror.Tests.MessageTests.DisconnectMessageTest" methodname="DisconnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1752296063" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001449" asserts="0">
              <properties />
            </test-case>
            <test-case id="2203" name="ErrorMessageTest" fullname="Mirror.Tests.MessageTests.ErrorMessageTest" methodname="ErrorMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1595730485" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001560" asserts="0">
              <properties />
            </test-case>
            <test-case id="2204" name="NetworkPingMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPingMessageTest" methodname="NetworkPingMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1868794337" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001515" asserts="0">
              <properties />
            </test-case>
            <test-case id="2205" name="NetworkPongMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPongMessageTest" methodname="NetworkPongMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="759851707" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001584" asserts="0">
              <properties />
            </test-case>
            <test-case id="2206" name="NotReadyMessageTest" fullname="Mirror.Tests.MessageTests.NotReadyMessageTest" methodname="NotReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1526746363" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001553" asserts="0">
              <properties />
            </test-case>
            <test-case id="2207" name="ObjectDestroyMessageTest" fullname="Mirror.Tests.MessageTests.ObjectDestroyMessageTest" methodname="ObjectDestroyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="14752199" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001447" asserts="0">
              <properties />
            </test-case>
            <test-case id="2208" name="ObjectHideMessageTest" fullname="Mirror.Tests.MessageTests.ObjectHideMessageTest" methodname="ObjectHideMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1735109327" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001480" asserts="0">
              <properties />
            </test-case>
            <test-case id="2209" name="ObjectSpawnFinishedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnFinishedMessageTest" methodname="ObjectSpawnFinishedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1872046569" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001438" asserts="0">
              <properties />
            </test-case>
            <test-case id="2210" name="ObjectSpawnStartedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnStartedMessageTest" methodname="ObjectSpawnStartedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="878912461" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001441" asserts="0">
              <properties />
            </test-case>
            <test-case id="2211" name="ReadyMessageTest" fullname="Mirror.Tests.MessageTests.ReadyMessageTest" methodname="ReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="617062750" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001194" asserts="0">
              <properties />
            </test-case>
            <test-case id="2212" name="RemovePlayerMessageTest" fullname="Mirror.Tests.MessageTests.RemovePlayerMessageTest" methodname="RemovePlayerMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1789402670" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001601" asserts="0">
              <properties />
            </test-case>
            <test-case id="2213" name="RpcMessageTest" fullname="Mirror.Tests.MessageTests.RpcMessageTest" methodname="RpcMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="819737046" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001691" asserts="0">
              <properties />
            </test-case>
            <test-case id="2214" name="SpawnMessageTest" fullname="Mirror.Tests.MessageTests.SpawnMessageTest" methodname="SpawnMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1996267345" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.003501" asserts="0">
              <properties />
            </test-case>
            <test-case id="2215" name="SyncEventMessageTest" fullname="Mirror.Tests.MessageTests.SyncEventMessageTest" methodname="SyncEventMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="521263036" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001717" asserts="0">
              <properties />
            </test-case>
            <test-case id="2216" name="UpdateVarsMessageTest" fullname="Mirror.Tests.MessageTests.UpdateVarsMessageTest" methodname="UpdateVarsMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1320542005" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.001635" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2217" name="MultiplexTest" fullname="Mirror.Tests.MultiplexTest" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:31Z" duration="2.248329" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2218" name="TestAvailable" fullname="Mirror.Tests.MultiplexTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1320561576" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.196459" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2226" name="TestClient1Connected" fullname="Mirror.Tests.MultiplexTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1159475778" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:29Z" duration="0.197409" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2227" name="TestClient2Connected" fullname="Mirror.Tests.MultiplexTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="740316634" result="Passed" start-time="2020-07-30 17:12:29Z" end-time="2020-07-30 17:12:30Z" duration="0.197308" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2225" name="TestClientSend" fullname="Mirror.Tests.MultiplexTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1011743396" result="Passed" start-time="2020-07-30 17:12:30Z" end-time="2020-07-30 17:12:30Z" duration="0.197216" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2220" name="TestConnect" fullname="Mirror.Tests.MultiplexTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="641550037" result="Passed" start-time="2020-07-30 17:12:30Z" end-time="2020-07-30 17:12:30Z" duration="0.196442" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2223" name="TestConnected" fullname="Mirror.Tests.MultiplexTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1755276465" result="Passed" start-time="2020-07-30 17:12:30Z" end-time="2020-07-30 17:12:30Z" duration="0.197457" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2221" name="TestConnectFirstUri" fullname="Mirror.Tests.MultiplexTest.TestConnectFirstUri" methodname="TestConnectFirstUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1779393255" result="Passed" start-time="2020-07-30 17:12:30Z" end-time="2020-07-30 17:12:30Z" duration="0.196911" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2222" name="TestConnectSecondUri" fullname="Mirror.Tests.MultiplexTest.TestConnectSecondUri" methodname="TestConnectSecondUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1374317385" result="Passed" start-time="2020-07-30 17:12:30Z" end-time="2020-07-30 17:12:31Z" duration="0.196702" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2224" name="TestDisconnect" fullname="Mirror.Tests.MultiplexTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1260869464" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.197006" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2219" name="TestNotAvailable" fullname="Mirror.Tests.MultiplexTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1185535466" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.199023" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2228" name="TestServerConnected" fullname="Mirror.Tests.MultiplexTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1285872100" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.196673" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2284" name="NetworkBehaviourHookGuardTester" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.089371" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2285" name="HookGuard" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester.HookGuard" methodname="HookGuard" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" seed="469975228" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.003410" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2286" name="NetworkBehaviourInitSyncObjectTester" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.100365" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2287" name="InitSyncObject" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester.InitSyncObject" methodname="InitSyncObject" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" seed="560384628" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:31Z" duration="0.004258" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2809" name="NetworkBehaviourSerialize" fullname="Mirror.Tests.NetworkBehaviourSerialize" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-07-30 17:12:31Z" end-time="2020-07-30 17:12:36Z" duration="4.210707" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2617" name="NetworkBehaviourSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:36Z" duration="4.100318" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="2620" name="BehaviourWithSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:32Z" duration="0.500961" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2618" name="BehaviourWithSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(True)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="435931292" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:32Z" duration="0.200582" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2619" name="BehaviourWithSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(False)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1987513874" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:32Z" duration="0.197997" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2635" name="BehaviourWithSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:33Z" duration="0.495719" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2633" name="BehaviourWithSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(True)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1164934540" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:32Z" duration="0.199556" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2634" name="BehaviourWithSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(False)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="606538781" result="Passed" start-time="2020-07-30 17:12:32Z" end-time="2020-07-30 17:12:33Z" duration="0.197798" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2623" name="OverrideBehaviourFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:33Z" duration="0.496839" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2621" name="OverrideBehaviourFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(True)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="733230082" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:33Z" duration="0.197281" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2622" name="OverrideBehaviourFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(False)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="641220271" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:33Z" duration="0.198118" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2638" name="OverrideBehaviourFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:34Z" duration="0.497929" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2636" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1660855785" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:33Z" duration="0.199149" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2637" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="758084640" result="Passed" start-time="2020-07-30 17:12:33Z" end-time="2020-07-30 17:12:34Z" duration="0.198671" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2626" name="OverrideBehaviourWithSyncVarFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:34Z" duration="0.495716" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2624" name="OverrideBehaviourWithSyncVarFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="26150443" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:34Z" duration="0.200802" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2625" name="OverrideBehaviourWithSyncVarFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="860965541" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:34Z" duration="0.198133" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2641" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:35Z" duration="0.496018" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2639" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="286537970" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:34Z" duration="0.199786" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2640" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1197321263" result="Passed" start-time="2020-07-30 17:12:34Z" end-time="2020-07-30 17:12:35Z" duration="0.197322" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2632" name="SubClassFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:35Z" duration="0.495453" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2630" name="SubClassFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(True)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="594340498" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:35Z" duration="0.199623" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2631" name="SubClassFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(False)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="654560778" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:35Z" duration="0.197529" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2629" name="SubClassTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:36Z" duration="0.497906" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2627" name="SubClassTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(True)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="2122988226" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:35Z" duration="0.198795" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2628" name="SubClassTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(False)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1424992071" result="Passed" start-time="2020-07-30 17:12:35Z" end-time="2020-07-30 17:12:36Z" duration="0.198915" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2229" name="NetworkBehaviourTests" fullname="Mirror.Tests.NetworkBehaviourTests" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" testcasecount="54" result="Passed" start-time="2020-07-30 17:12:36Z" end-time="2020-07-30 17:12:47Z" duration="10.861497" total="54" passed="54" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2277" name="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncObjectsDirtyBits" methodname="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1783382548" result="Passed" start-time="2020-07-30 17:12:36Z" end-time="2020-07-30 17:12:36Z" duration="0.199619" asserts="0">
              <properties />
            </test-case>
            <test-case id="2276" name="ClearAllDirtyBitsClearsSyncVarDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncVarDirtyBits" methodname="ClearAllDirtyBitsClearsSyncVarDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1184235891" result="Passed" start-time="2020-07-30 17:12:36Z" end-time="2020-07-30 17:12:36Z" duration="0.197930" asserts="0">
              <properties />
            </test-case>
            <test-case id="2236" name="ComponentIndex" fullname="Mirror.Tests.NetworkBehaviourTests.ComponentIndex" methodname="ComponentIndex" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="796755915" result="Passed" start-time="2020-07-30 17:12:36Z" end-time="2020-07-30 17:12:36Z" duration="0.197908" asserts="0">
              <properties />
            </test-case>
            <test-case id="2278" name="DirtyObjectBits" fullname="Mirror.Tests.NetworkBehaviourTests.DirtyObjectBits" methodname="DirtyObjectBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1313276110" result="Passed" start-time="2020-07-30 17:12:36Z" end-time="2020-07-30 17:12:37Z" duration="0.199285" asserts="0">
              <properties />
            </test-case>
            <test-case id="2246" name="GetDelegate" fullname="Mirror.Tests.NetworkBehaviourTests.GetDelegate" methodname="GetDelegate" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="156029136" result="Passed" start-time="2020-07-30 17:12:37Z" end-time="2020-07-30 17:12:37Z" duration="0.197694" asserts="0">
              <properties />
            </test-case>
            <test-case id="2267" name="GetSyncVarGameObjectOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClient" methodname="GetSyncVarGameObjectOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="789854498" result="Passed" start-time="2020-07-30 17:12:37Z" end-time="2020-07-30 17:12:37Z" duration="0.200298" asserts="0">
              <properties />
            </test-case>
            <test-case id="2268" name="GetSyncVarGameObjectOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClientNull" methodname="GetSyncVarGameObjectOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2036395835" result="Passed" start-time="2020-07-30 17:12:37Z" end-time="2020-07-30 17:12:37Z" duration="0.198913" asserts="0">
              <properties />
            </test-case>
            <test-case id="2265" name="GetSyncVarGameObjectOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServer" methodname="GetSyncVarGameObjectOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="141540400" result="Passed" start-time="2020-07-30 17:12:37Z" end-time="2020-07-30 17:12:37Z" duration="0.197564" asserts="0">
              <properties />
            </test-case>
            <test-case id="2266" name="GetSyncVarGameObjectOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServerNull" methodname="GetSyncVarGameObjectOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1697956649" result="Passed" start-time="2020-07-30 17:12:37Z" end-time="2020-07-30 17:12:38Z" duration="0.198222" asserts="0">
              <properties />
            </test-case>
            <test-case id="2274" name="GetSyncVarNetworkIdentityOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClient" methodname="GetSyncVarNetworkIdentityOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="744389355" result="Passed" start-time="2020-07-30 17:12:38Z" end-time="2020-07-30 17:12:38Z" duration="0.199559" asserts="0">
              <properties />
            </test-case>
            <test-case id="2275" name="GetSyncVarNetworkIdentityOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClientNull" methodname="GetSyncVarNetworkIdentityOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1073246782" result="Passed" start-time="2020-07-30 17:12:38Z" end-time="2020-07-30 17:12:38Z" duration="0.198582" asserts="0">
              <properties />
            </test-case>
            <test-case id="2272" name="GetSyncVarNetworkIdentityOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServer" methodname="GetSyncVarNetworkIdentityOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1355080311" result="Passed" start-time="2020-07-30 17:12:38Z" end-time="2020-07-30 17:12:38Z" duration="0.198581" asserts="0">
              <properties />
            </test-case>
            <test-case id="2273" name="GetSyncVarNetworkIdentityOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServerNull" methodname="GetSyncVarNetworkIdentityOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="93868550" result="Passed" start-time="2020-07-30 17:12:38Z" end-time="2020-07-30 17:12:38Z" duration="0.197860" asserts="0">
              <properties />
            </test-case>
            <test-case id="2235" name="HasIdentitysConnectionToClient" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToClient" methodname="HasIdentitysConnectionToClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1108244626" result="Passed" start-time="2020-07-30 17:12:38Z" end-time="2020-07-30 17:12:39Z" duration="0.198712" asserts="0">
              <properties />
            </test-case>
            <test-case id="2234" name="HasIdentitysConnectionToServer" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToServer" methodname="HasIdentitysConnectionToServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="62083397" result="Passed" start-time="2020-07-30 17:12:39Z" end-time="2020-07-30 17:12:39Z" duration="0.198777" asserts="0">
              <properties />
            </test-case>
            <test-case id="2233" name="HasIdentitysNetId" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysNetId" methodname="HasIdentitysNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="722198969" result="Passed" start-time="2020-07-30 17:12:39Z" end-time="2020-07-30 17:12:39Z" duration="0.198544" asserts="0">
              <properties />
            </test-case>
            <test-case id="2232" name="HasNoAuthorityByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.HasNoAuthorityByDefault" methodname="HasNoAuthorityByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1554667843" result="Passed" start-time="2020-07-30 17:12:39Z" end-time="2020-07-30 17:12:39Z" duration="0.199197" asserts="0">
              <properties />
            </test-case>
            <test-case id="2239" name="InvokeCommand" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeCommand" methodname="InvokeCommand" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1520180491" result="Passed" start-time="2020-07-30 17:12:39Z" end-time="2020-07-30 17:12:39Z" duration="0.197702" asserts="0">
              <properties />
            </test-case>
            <test-case id="2242" name="InvokeRPC" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeRPC" methodname="InvokeRPC" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2120693668" result="Passed" start-time="2020-07-30 17:12:39Z" end-time="2020-07-30 17:12:40Z" duration="0.198889" asserts="0">
              <properties />
            </test-case>
            <test-case id="2244" name="InvokeSyncEvent" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeSyncEvent" methodname="InvokeSyncEvent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2064578228" result="Passed" start-time="2020-07-30 17:12:40Z" end-time="2020-07-30 17:12:40Z" duration="0.198147" asserts="0">
              <properties />
            </test-case>
            <test-case id="2231" name="IsClientOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsClientOnly" methodname="IsClientOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="412753819" result="Passed" start-time="2020-07-30 17:12:40Z" end-time="2020-07-30 17:12:40Z" duration="0.199643" asserts="0">
              <properties />
            </test-case>
            <test-case id="2230" name="IsServerOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsServerOnly" methodname="IsServerOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1467305053" result="Passed" start-time="2020-07-30 17:12:40Z" end-time="2020-07-30 17:12:40Z" duration="0.198912" asserts="0">
              <properties />
            </test-case>
            <test-case id="2237" name="OnCheckObserverTrueByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.OnCheckObserverTrueByDefault" methodname="OnCheckObserverTrueByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1615285522" result="Passed" start-time="2020-07-30 17:12:40Z" end-time="2020-07-30 17:12:40Z" duration="0.198276" asserts="0">
              <properties />
            </test-case>
            <test-case id="2281" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkBehaviourTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="722095358" result="Passed" start-time="2020-07-30 17:12:40Z" end-time="2020-07-30 17:12:41Z" duration="0.198555" asserts="0">
              <properties />
            </test-case>
            <test-case id="2282" name="OnStartClient" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartClient" methodname="OnStartClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1417698214" result="Passed" start-time="2020-07-30 17:12:41Z" end-time="2020-07-30 17:12:41Z" duration="0.199427" asserts="0">
              <properties />
            </test-case>
            <test-case id="2283" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1006155767" result="Passed" start-time="2020-07-30 17:12:41Z" end-time="2020-07-30 17:12:41Z" duration="0.198118" asserts="0">
              <properties />
            </test-case>
            <test-case id="2245" name="RegisterDelegateDoesntOverwrite" fullname="Mirror.Tests.NetworkBehaviourTests.RegisterDelegateDoesntOverwrite" methodname="RegisterDelegateDoesntOverwrite" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1516435502" result="Passed" start-time="2020-07-30 17:12:41Z" end-time="2020-07-30 17:12:41Z" duration="0.198767" asserts="0">
              <properties />
              <output><![CDATA[Function Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate and Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate2 have the same hash.  Please rename one of them
]]></output>
            </test-case>
            <test-case id="2238" name="SendCommandInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendCommandInternal" methodname="SendCommandInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="993177627" result="Passed" start-time="2020-07-30 17:12:41Z" end-time="2020-07-30 17:12:41Z" duration="0.197749" asserts="0">
              <properties />
              <output><![CDATA[Command Function CommandGenerated called on server without an active client.
Trying to send command for object without authority. Mirror.Tests.NetworkBehaviourSendCommandInternalComponent.CommandGenerated
Send command attempted with no client running [client=].
]]></output>
            </test-case>
            <test-case id="2243" name="SendEventInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendEventInternal" methodname="SendEventInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="88257698" result="Passed" start-time="2020-07-30 17:12:41Z" end-time="2020-07-30 17:12:42Z" duration="0.198075" asserts="0">
              <properties />
              <output><![CDATA[SendEvent no server?
]]></output>
            </test-case>
            <test-case id="2240" name="SendRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendRPCInternal" methodname="SendRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1267134486" result="Passed" start-time="2020-07-30 17:12:42Z" end-time="2020-07-30 17:12:42Z" duration="0.197951" asserts="0">
              <properties />
              <output><![CDATA[RPC Function RPCGenerated called on Client.
ClientRpc RPCGenerated called on un-spawned object: New Game Object
]]></output>
            </test-case>
            <test-case id="2241" name="SendTargetRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendTargetRPCInternal" methodname="SendTargetRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="527190734" result="Passed" start-time="2020-07-30 17:12:42Z" end-time="2020-07-30 17:12:42Z" duration="0.198281" asserts="0">
              <properties />
              <output><![CDATA[TargetRPC Function TargetRPCGenerated called on client.
TargetRpc TargetRPCGenerated called on un-spawned object: New Game Object
TargetRPC Function TargetRPCGenerated called on connection to server
]]></output>
            </test-case>
            <test-case id="2279" name="SerializeAndDeserializeObjectsAll" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsAll" methodname="SerializeAndDeserializeObjectsAll" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1392224286" result="Passed" start-time="2020-07-30 17:12:42Z" end-time="2020-07-30 17:12:42Z" duration="0.198463" asserts="0">
              <properties />
            </test-case>
            <test-case id="2280" name="SerializeAndDeserializeObjectsDelta" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsDelta" methodname="SerializeAndDeserializeObjectsDelta" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="413490171" result="Passed" start-time="2020-07-30 17:12:42Z" end-time="2020-07-30 17:12:42Z" duration="0.197372" asserts="0">
              <properties />
            </test-case>
            <test-case id="2262" name="SetSyncVarGameObjectNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectNull" methodname="SetSyncVarGameObjectNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="283056367" result="Passed" start-time="2020-07-30 17:12:42Z" end-time="2020-07-30 17:12:43Z" duration="0.199502" asserts="0">
              <properties />
            </test-case>
            <test-case id="2263" name="SetSyncVarGameObjectWithoutNetworkIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithoutNetworkIdentity" methodname="SetSyncVarGameObjectWithoutNetworkIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="384471142" result="Passed" start-time="2020-07-30 17:12:43Z" end-time="2020-07-30 17:12:43Z" duration="0.197991" asserts="0">
              <properties />
            </test-case>
            <test-case id="2261" name="SetSyncVarGameObjectWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithValidObject" methodname="SetSyncVarGameObjectWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1826848606" result="Passed" start-time="2020-07-30 17:12:43Z" end-time="2020-07-30 17:12:43Z" duration="0.198920" asserts="0">
              <properties />
            </test-case>
            <test-case id="2264" name="SetSyncVarGameObjectZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectZeroNetId" methodname="SetSyncVarGameObjectZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="388676459" result="Passed" start-time="2020-07-30 17:12:43Z" end-time="2020-07-30 17:12:43Z" duration="0.198897" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2270" name="SetSyncVarNetworkIdentityNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityNull" methodname="SetSyncVarNetworkIdentityNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="102013212" result="Passed" start-time="2020-07-30 17:12:43Z" end-time="2020-07-30 17:12:43Z" duration="0.197573" asserts="0">
              <properties />
            </test-case>
            <test-case id="2269" name="SetSyncVarNetworkIdentityWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityWithValidObject" methodname="SetSyncVarNetworkIdentityWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="389569734" result="Passed" start-time="2020-07-30 17:12:43Z" end-time="2020-07-30 17:12:44Z" duration="0.199026" asserts="0">
              <properties />
            </test-case>
            <test-case id="2271" name="SetSyncVarNetworkIdentityZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityZeroNetId" methodname="SetSyncVarNetworkIdentityZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="72056726" result="Passed" start-time="2020-07-30 17:12:44Z" end-time="2020-07-30 17:12:44Z" duration="0.199118" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2248" name="SyncVarGameObjectEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualNull" methodname="SyncVarGameObjectEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="549211474" result="Passed" start-time="2020-07-30 17:12:44Z" end-time="2020-07-30 17:12:44Z" duration="0.197778" asserts="0">
              <properties />
            </test-case>
            <test-case id="2253" name="SyncVarGameObjectEqualUnspawnedGO" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGO" methodname="SyncVarGameObjectEqualUnspawnedGO" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="779845027" result="Passed" start-time="2020-07-30 17:12:44Z" end-time="2020-07-30 17:12:44Z" duration="0.197573" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2254" name="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" methodname="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1771502624" result="Passed" start-time="2020-07-30 17:12:44Z" end-time="2020-07-30 17:12:44Z" duration="0.197867" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2251" name="SyncVarGameObjectEqualValidGOWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithDifferentNetId" methodname="SyncVarGameObjectEqualValidGOWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1666910442" result="Passed" start-time="2020-07-30 17:12:44Z" end-time="2020-07-30 17:12:45Z" duration="0.198749" asserts="0">
              <properties />
            </test-case>
            <test-case id="2252" name="SyncVarGameObjectEqualValidGOWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithSameNetId" methodname="SyncVarGameObjectEqualValidGOWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1525142697" result="Passed" start-time="2020-07-30 17:12:45Z" end-time="2020-07-30 17:12:45Z" duration="0.198910" asserts="0">
              <properties />
            </test-case>
            <test-case id="2250" name="SyncVarGameObjectEqualWithoutIdentityComponent" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualWithoutIdentityComponent" methodname="SyncVarGameObjectEqualWithoutIdentityComponent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="249997767" result="Passed" start-time="2020-07-30 17:12:45Z" end-time="2020-07-30 17:12:45Z" duration="0.197500" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2249" name="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="36136245" result="Passed" start-time="2020-07-30 17:12:45Z" end-time="2020-07-30 17:12:45Z" duration="0.198975" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2247" name="SyncVarGameObjectEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdNullIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1336566488" result="Passed" start-time="2020-07-30 17:12:45Z" end-time="2020-07-30 17:12:45Z" duration="0.197140" asserts="0">
              <properties />
            </test-case>
            <test-case id="2256" name="SyncVarNetworkIdentityEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualNull" methodname="SyncVarNetworkIdentityEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1522923406" result="Passed" start-time="2020-07-30 17:12:45Z" end-time="2020-07-30 17:12:46Z" duration="0.198560" asserts="0">
              <properties />
            </test-case>
            <test-case id="2259" name="SyncVarNetworkIdentityEqualUnspawnedIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentity" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="396508453" result="Passed" start-time="2020-07-30 17:12:46Z" end-time="2020-07-30 17:12:46Z" duration="0.198158" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2260" name="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1321046333" result="Passed" start-time="2020-07-30 17:12:46Z" end-time="2020-07-30 17:12:46Z" duration="0.198729" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2257" name="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1651207187" result="Passed" start-time="2020-07-30 17:12:46Z" end-time="2020-07-30 17:12:46Z" duration="0.198074" asserts="0">
              <properties />
            </test-case>
            <test-case id="2258" name="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1603286006" result="Passed" start-time="2020-07-30 17:12:46Z" end-time="2020-07-30 17:12:46Z" duration="0.196878" asserts="0">
              <properties />
            </test-case>
            <test-case id="2255" name="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" methodname="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="68681769" result="Passed" start-time="2020-07-30 17:12:46Z" end-time="2020-07-30 17:12:47Z" duration="0.198398" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2288" name="NetworkClientTests" fullname="Mirror.Tests.NetworkClientTests" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:48Z" duration="1.066938" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2291" name="ConnectUri" fullname="Mirror.Tests.NetworkClientTests.ConnectUri" methodname="ConnectUri" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="718587897" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:47Z" duration="0.200160" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 7F-81-FA-66-F6-D4-45-65-2E-3F
]]></output>
            </test-case>
            <test-case id="2292" name="DisconnectInHostMode" fullname="Mirror.Tests.NetworkClientTests.DisconnectInHostMode" methodname="DisconnectInHostMode" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1619059394" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:47Z" duration="0.198226" asserts="0">
              <properties />
            </test-case>
            <test-case id="2290" name="isConnected" fullname="Mirror.Tests.NetworkClientTests.isConnected" methodname="isConnected" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="389447944" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:47Z" duration="0.198311" asserts="0">
              <properties />
            </test-case>
            <test-case id="2293" name="Send" fullname="Mirror.Tests.NetworkClientTests.Send" methodname="Send" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1333695438" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:47Z" duration="0.198330" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 1D-33
]]></output>
            </test-case>
            <test-case id="2289" name="serverIp" fullname="Mirror.Tests.NetworkClientTests.serverIp" methodname="serverIp" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="2016980293" result="Passed" start-time="2020-07-30 17:12:47Z" end-time="2020-07-30 17:12:48Z" duration="0.198189" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2294" name="NetworkIdentityTests" fullname="Mirror.Tests.NetworkIdentityTests" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" testcasecount="58" result="Passed" start-time="2020-07-30 17:12:48Z" end-time="2020-07-30 17:12:59Z" duration="11.696306" total="58" passed="58" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2338" name="AddAllReadyServerConnectionsToObservers" fullname="Mirror.Tests.NetworkIdentityTests.AddAllReadyServerConnectionsToObservers" methodname="AddAllReadyServerConnectionsToObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1160898907" result="Passed" start-time="2020-07-30 17:12:48Z" end-time="2020-07-30 17:12:48Z" duration="0.200333" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2326" name="AddObserver" fullname="Mirror.Tests.NetworkIdentityTests.AddObserver" methodname="AddObserver" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1563980156" result="Passed" start-time="2020-07-30 17:12:48Z" end-time="2020-07-30 17:12:48Z" duration="0.197180" asserts="0">
              <properties />
              <output><![CDATA[AddObserver for New Game Object (UnityEngine.GameObject) observer list is null
]]></output>
            </test-case>
            <test-case id="2311" name="AssignAndRemoveClientAuthority" fullname="Mirror.Tests.NetworkIdentityTests.AssignAndRemoveClientAuthority" methodname="AssignAndRemoveClientAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="452763340" result="Passed" start-time="2020-07-30 17:12:48Z" end-time="2020-07-30 17:12:48Z" duration="0.198204" asserts="0">
              <properties />
              <output><![CDATA[AssignClientAuthority can only be called on the server for spawned objects.
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
AssignClientAuthority for New Game Object (UnityEngine.GameObject) already has an owner. Use RemoveClientAuthority() first.
AssignClientAuthority for New Game Object (UnityEngine.GameObject) owner cannot be null. Use RemoveClientAuthority() instead.
RemoveClientAuthority can only be called on the server for spawned objects.
RemoveClientAuthority cannot remove authority for a player object
]]></output>
            </test-case>
            <test-case id="2304" name="AssignSceneID" fullname="Mirror.Tests.NetworkIdentityTests.AssignSceneID" methodname="AssignSceneID" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="139655314" result="Passed" start-time="2020-07-30 17:12:48Z" end-time="2020-07-30 17:12:49Z" duration="0.197257" asserts="0">
              <properties />
            </test-case>
            <test-case id="2329" name="ClearAllComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearAllComponentsDirtyBits" methodname="ClearAllComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="825989611" result="Passed" start-time="2020-07-30 17:12:49Z" end-time="2020-07-30 17:12:49Z" duration="0.198372" asserts="0">
              <properties />
            </test-case>
            <test-case id="2328" name="ClearDirtyComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearDirtyComponentsDirtyBits" methodname="ClearDirtyComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="81229470" result="Passed" start-time="2020-07-30 17:12:49Z" end-time="2020-07-30 17:12:49Z" duration="0.198587" asserts="0">
              <properties />
            </test-case>
            <test-case id="2327" name="ClearObservers" fullname="Mirror.Tests.NetworkIdentityTests.ClearObservers" methodname="ClearObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="862802636" result="Passed" start-time="2020-07-30 17:12:49Z" end-time="2020-07-30 17:12:49Z" duration="0.198723" asserts="0">
              <properties />
            </test-case>
            <test-case id="2320" name="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" fullname="Mirror.Tests.NetworkIdentityTests.CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" methodname="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1226782426" result="Passed" start-time="2020-07-30 17:12:49Z" end-time="2020-07-30 17:12:49Z" duration="0.198789" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2350" name="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="738547147" result="Passed" start-time="2020-07-30 17:12:49Z" end-time="2020-07-30 17:12:50Z" duration="0.197239" asserts="0">
              <properties />
            </test-case>
            <test-case id="2351" name="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="585033100" result="Passed" start-time="2020-07-30 17:12:50Z" end-time="2020-07-30 17:12:50Z" duration="0.199385" asserts="0">
              <properties />
            </test-case>
            <test-case id="2348" name="GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" fullname="Mirror.Tests.NetworkIdentityTests.GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" methodname="GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1973283320" result="Passed" start-time="2020-07-30 17:12:50Z" end-time="2020-07-30 17:12:50Z" duration="0.197937" asserts="0">
              <properties />
            </test-case>
            <test-case id="2349" name="GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" fullname="Mirror.Tests.NetworkIdentityTests.GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" methodname="GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1325362477" result="Passed" start-time="2020-07-30 17:12:50Z" end-time="2020-07-30 17:12:50Z" duration="0.198046" asserts="0">
              <properties />
            </test-case>
            <test-case id="2335" name="GetNewObservers" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObservers" methodname="GetNewObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="265238189" result="Passed" start-time="2020-07-30 17:12:50Z" end-time="2020-07-30 17:12:50Z" duration="0.198052" asserts="0">
              <properties />
            </test-case>
            <test-case id="2336" name="GetNewObserversClearsHashSet" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversClearsHashSet" methodname="GetNewObserversClearsHashSet" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="41340808" result="Passed" start-time="2020-07-30 17:12:50Z" end-time="2020-07-30 17:12:51Z" duration="0.198533" asserts="0">
              <properties />
            </test-case>
            <test-case id="2337" name="GetNewObserversFalseIfNoComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversFalseIfNoComponents" methodname="GetNewObserversFalseIfNoComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1183216465" result="Passed" start-time="2020-07-30 17:12:51Z" end-time="2020-07-30 17:12:51Z" duration="0.197864" asserts="0">
              <properties />
            </test-case>
            <test-case id="2298" name="GetSetAssetId" fullname="Mirror.Tests.NetworkIdentityTests.GetSetAssetId" methodname="GetSetAssetId" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1482693730" result="Passed" start-time="2020-07-30 17:12:51Z" end-time="2020-07-30 17:12:51Z" duration="0.197953" asserts="0">
              <properties />
            </test-case>
            <test-case id="2331" name="HandleCommand" fullname="Mirror.Tests.NetworkIdentityTests.HandleCommand" methodname="HandleCommand" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="459073926" result="Passed" start-time="2020-07-30 17:12:51Z" end-time="2020-07-30 17:12:51Z" duration="0.200012" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming Command [-1116480643] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2332" name="HandleRpc" fullname="Mirror.Tests.NetworkIdentityTests.HandleRpc" methodname="HandleRpc" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="98643685" result="Passed" start-time="2020-07-30 17:12:51Z" end-time="2020-07-30 17:12:51Z" duration="0.197197" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming ClientRpc [-1367188039] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2333" name="HandleSyncEvent" fullname="Mirror.Tests.NetworkIdentityTests.HandleSyncEvent" methodname="HandleSyncEvent" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2136256331" result="Passed" start-time="2020-07-30 17:12:51Z" end-time="2020-07-30 17:12:52Z" duration="0.198243" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming SyncEvent [-1126363019] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2297" name="HostMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.HostMode_IsFlags_Test" methodname="HostMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="34902658" result="Passed" start-time="2020-07-30 17:12:52Z" end-time="2020-07-30 17:12:52Z" duration="0.197856" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
No ready connection found for setting player controller during InternalAddPlayer
]]></output>
            </test-case>
            <test-case id="2312" name="NotifyAuthorityCallsOnStartStopAuthority" fullname="Mirror.Tests.NetworkIdentityTests.NotifyAuthorityCallsOnStartStopAuthority" methodname="NotifyAuthorityCallsOnStartStopAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1475713" result="Passed" start-time="2020-07-30 17:12:52Z" end-time="2020-07-30 17:12:52Z" duration="0.196590" asserts="0">
              <properties />
            </test-case>
            <test-case id="2315" name="OnCheckObserverCatchesException" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverCatchesException" methodname="OnCheckObserverCatchesException" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="451762614" result="Passed" start-time="2020-07-30 17:12:52Z" end-time="2020-07-30 17:12:52Z" duration="0.199323" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnCheckObserver:some exception   at Mirror.Tests.NetworkIdentityTests+CheckObserverExceptionNetworkBehaviour.OnCheckObserver (Mirror.NetworkConnection conn) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:161 
  at Mirror.NetworkIdentity.OnCheckObserver (Mirror.NetworkConnection conn) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:757 
]]></output>
            </test-case>
            <test-case id="2317" name="OnCheckObserverFalse" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverFalse" methodname="OnCheckObserverFalse" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1116309705" result="Passed" start-time="2020-07-30 17:12:52Z" end-time="2020-07-30 17:12:52Z" duration="0.196758" asserts="0">
              <properties />
            </test-case>
            <test-case id="2316" name="OnCheckObserverTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverTrue" methodname="OnCheckObserverTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="947667424" result="Passed" start-time="2020-07-30 17:12:52Z" end-time="2020-07-30 17:12:53Z" duration="0.197709" asserts="0">
              <properties />
            </test-case>
            <test-case id="2321" name="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" fullname="Mirror.Tests.NetworkIdentityTests.OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" methodname="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1073010970" result="Passed" start-time="2020-07-30 17:12:53Z" end-time="2020-07-30 17:12:53Z" duration="0.198736" asserts="0">
              <properties />
              <output><![CDATA[OnDeserialize was expected to read 8 instead of 4 bytes for object:New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeMismatchNetworkBehaviour sceneId=D3390B51. Make sure that OnSerialize and OnDeserialize write/read the same amount of data in all cases.
]]></output>
            </test-case>
            <test-case id="2323" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkIdentityTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="816578235" result="Passed" start-time="2020-07-30 17:12:53Z" end-time="2020-07-30 17:12:53Z" duration="0.197652" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnNetworkDestroy:some exception   at Mirror.Tests.NetworkIdentityTests+NetworkDestroyExceptionNetworkBehaviour.OnStopClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:99 
  at Mirror.NetworkIdentity.OnStopClient () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:778 
]]></output>
            </test-case>
            <test-case id="2319" name="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" methodname="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2022151092" result="Passed" start-time="2020-07-30 17:12:53Z" end-time="2020-07-30 17:12:53Z" duration="0.197094" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2318" name="OnSerializeAndDeserializeAllSafely" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAndDeserializeAllSafely" methodname="OnSerializeAndDeserializeAllSafely" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1025316825" result="Passed" start-time="2020-07-30 17:12:53Z" end-time="2020-07-30 17:12:53Z" duration="0.197653" asserts="0">
              <properties />
              <output><![CDATA[OnSerialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=8835BFE

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnSerialize (Mirror.NetworkWriter writer, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:222 
  at Mirror.NetworkIdentity.OnSerializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkWriter writer, System.Boolean initialState) [0x0001a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:806 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=8835BFE length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exeption System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:226 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:947 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=8835BFE length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exeption System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:226 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:947 
]]></output>
            </test-case>
            <test-case id="2352" name="OnSetHostVisibilityBaseTest" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityBaseTest" methodname="OnSetHostVisibilityBaseTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1508505457" result="Passed" start-time="2020-07-30 17:12:53Z" end-time="2020-07-30 17:12:54Z" duration="0.188965" asserts="0">
              <properties />
            </test-case>
            <test-case id="2313" name="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityCallsComponentsAndCatchesExceptions" methodname="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="739009428" result="Passed" start-time="2020-07-30 17:12:54Z" end-time="2020-07-30 17:12:54Z" duration="0.198503" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:135 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:738 
Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:135 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:738 
]]></output>
            </test-case>
            <test-case id="2309" name="OnStartAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStartAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="97428050" result="Passed" start-time="2020-07-30 17:12:54Z" end-time="2020-07-30 17:12:54Z" duration="0.197078" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StartAuthorityExceptionNetworkBehaviour.OnStartAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:51 
  at Mirror.NetworkIdentity.OnStartAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:703 
]]></output>
            </test-case>
            <test-case id="2308" name="OnStartClientCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartClientCallsComponentsAndCatchesExceptions" methodname="OnStartClientCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="225845434" result="Passed" start-time="2020-07-30 17:12:54Z" end-time="2020-07-30 17:12:54Z" duration="0.198550" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartClient:some exception   at Mirror.Tests.NetworkIdentityTests+StartClientExceptionNetworkBehaviour.OnStartClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:41 
  at Mirror.NetworkIdentity.OnStartClient () [0x0007d] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:648 
]]></output>
            </test-case>
            <test-case id="2322" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkIdentityTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="75748527" result="Passed" start-time="2020-07-30 17:12:54Z" end-time="2020-07-30 17:12:54Z" duration="0.195832" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartLocalPlayer:some exception   at Mirror.Tests.NetworkIdentityTests+StartLocalPlayerExceptionNetworkBehaviour.OnStartLocalPlayer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:83 
  at Mirror.NetworkIdentity.OnStartLocalPlayer () [0x0002a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:673 
]]></output>
            </test-case>
            <test-case id="2307" name="OnStartServerCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerCallsComponentsAndCatchesExceptions" methodname="OnStartServerCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="214877433" result="Passed" start-time="2020-07-30 17:12:54Z" end-time="2020-07-30 17:12:55Z" duration="0.197794" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartServer:some exception   at Mirror.Tests.NetworkIdentityTests+StartServerExceptionNetworkBehaviour.OnStartServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:31 
  at Mirror.NetworkIdentity.OnStartServer () [0x000da] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:599 
]]></output>
            </test-case>
            <test-case id="2314" name="OnStartServerInHostModeSetsIsClientTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerInHostModeSetsIsClientTrue" methodname="OnStartServerInHostModeSetsIsClientTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="763581525" result="Passed" start-time="2020-07-30 17:12:55Z" end-time="2020-07-30 17:12:55Z" duration="0.196919" asserts="0">
              <properties />
            </test-case>
            <test-case id="2295" name="OnStartServerTest" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerTest" methodname="OnStartServerTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1190364481" result="Passed" start-time="2020-07-30 17:12:55Z" end-time="2020-07-30 17:12:55Z" duration="0.197506" asserts="0">
              <properties />
            </test-case>
            <test-case id="2310" name="OnStopAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStopAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStopAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1781156153" result="Passed" start-time="2020-07-30 17:12:55Z" end-time="2020-07-30 17:12:55Z" duration="0.199702" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StopAuthorityExceptionNetworkBehaviour.OnStopAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:67 
  at Mirror.NetworkIdentity.OnStopAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:723 
]]></output>
            </test-case>
            <test-case id="2324" name="OnStopServer" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServer" methodname="OnStopServer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1943071225" result="Passed" start-time="2020-07-30 17:12:55Z" end-time="2020-07-30 17:12:55Z" duration="0.196455" asserts="0">
              <properties />
            </test-case>
            <test-case id="2325" name="OnStopServerEx" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServerEx" methodname="OnStopServerEx" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1679485467" result="Passed" start-time="2020-07-30 17:12:55Z" end-time="2020-07-30 17:12:56Z" duration="0.199057" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopServer:some exception   at Mirror.Tests.NetworkIdentityTests+StopServerExceptionNetworkBehaviour.OnStopServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:121 
  at Mirror.NetworkIdentity.OnStopServer () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:619 
]]></output>
            </test-case>
            <test-case id="2306" name="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" fullname="Mirror.Tests.NetworkIdentityTests.OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" methodname="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1025804145" result="Passed" start-time="2020-07-30 17:12:56Z" end-time="2020-07-30 17:12:56Z" duration="0.197408" asserts="0">
              <properties />
            </test-case>
            <test-case id="2345" name="RebuildObserversAddRemoveAndVisListTest" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddRemoveAndVisListTest" methodname="RebuildObserversAddRemoveAndVisListTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1290586820" result="Passed" start-time="2020-07-30 17:12:56Z" end-time="2020-07-30 17:12:56Z" duration="0.197481" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2339" name="RebuildObserversAddsOwnReadyPlayer" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsOwnReadyPlayer" methodname="RebuildObserversAddsOwnReadyPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="555965326" result="Passed" start-time="2020-07-30 17:12:56Z" end-time="2020-07-30 17:12:56Z" duration="0.197998" asserts="0">
              <properties />
            </test-case>
            <test-case id="2341" name="RebuildObserversAddsReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyConnectionsIfImplemented" methodname="RebuildObserversAddsReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1139144186" result="Passed" start-time="2020-07-30 17:12:56Z" end-time="2020-07-30 17:12:56Z" duration="0.197963" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2343" name="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyServerConnectionsIfNotImplemented" methodname="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1864562534" result="Passed" start-time="2020-07-30 17:12:56Z" end-time="2020-07-30 17:12:57Z" duration="0.197157" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2344" name="RebuildObserversDoesNotAddServerConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesNotAddServerConnectionsIfImplemented" methodname="RebuildObserversDoesNotAddServerConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="488394519" result="Passed" start-time="2020-07-30 17:12:57Z" end-time="2020-07-30 17:12:57Z" duration="0.198103" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2342" name="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" methodname="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="132521760" result="Passed" start-time="2020-07-30 17:12:57Z" end-time="2020-07-30 17:12:57Z" duration="0.198034" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2340" name="RebuildObserversOnlyAddsOwnPlayerIfReady" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversOnlyAddsOwnPlayerIfReady" methodname="RebuildObserversOnlyAddsOwnPlayerIfReady" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1719225276" result="Passed" start-time="2020-07-30 17:12:57Z" end-time="2020-07-30 17:12:57Z" duration="0.196397" asserts="0">
              <properties />
            </test-case>
            <test-case id="2347" name="RebuildObserversReturnsIfNull" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversReturnsIfNull" methodname="RebuildObserversReturnsIfNull" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1997484242" result="Passed" start-time="2020-07-30 17:12:57Z" end-time="2020-07-30 17:12:57Z" duration="0.198691" asserts="0">
              <properties />
            </test-case>
            <test-case id="2346" name="RebuildObserversSetsHostVisibility" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversSetsHostVisibility" methodname="RebuildObserversSetsHostVisibility" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="852641599" result="Passed" start-time="2020-07-30 17:12:57Z" end-time="2020-07-30 17:12:58Z" duration="0.198715" asserts="0">
              <properties />
            </test-case>
            <test-case id="2303" name="RemoveObserverInternal" fullname="Mirror.Tests.NetworkIdentityTests.RemoveObserverInternal" methodname="RemoveObserverInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1144276419" result="Passed" start-time="2020-07-30 17:12:58Z" end-time="2020-07-30 17:12:58Z" duration="0.198052" asserts="0">
              <properties />
            </test-case>
            <test-case id="2330" name="Reset" fullname="Mirror.Tests.NetworkIdentityTests.Reset" methodname="Reset" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1141869769" result="Passed" start-time="2020-07-30 17:12:58Z" end-time="2020-07-30 17:12:58Z" duration="0.198830" asserts="0">
              <properties />
            </test-case>
            <test-case id="2296" name="ServerMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.ServerMode_IsFlags_Test" methodname="ServerMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="378591704" result="Passed" start-time="2020-07-30 17:12:58Z" end-time="2020-07-30 17:12:58Z" duration="0.199676" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2334" name="ServerUpdate" fullname="Mirror.Tests.NetworkIdentityTests.ServerUpdate" methodname="ServerUpdate" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="727301423" result="Passed" start-time="2020-07-30 17:12:58Z" end-time="2020-07-30 17:12:58Z" duration="0.197609" asserts="0">
              <properties />
            </test-case>
            <test-case id="2301" name="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" methodname="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1313728614" result="Passed" start-time="2020-07-30 17:12:58Z" end-time="2020-07-30 17:12:59Z" duration="0.198389" asserts="0">
              <properties />
            </test-case>
            <test-case id="2300" name="SetAssetId_GivesErrorForEmptyGuid" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorForEmptyGuid" methodname="SetAssetId_GivesErrorForEmptyGuid" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="362140798" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:12:59Z" duration="0.196834" asserts="0">
              <properties />
              <output><![CDATA[Can not set AssetId to empty guid on NetworkIdentity 'New Game Object', old assetId '373aca5bb80f45eb9e081bfd3790fd9e'
]]></output>
            </test-case>
            <test-case id="2299" name="SetAssetId_GivesErrorIfOneExists" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorIfOneExists" methodname="SetAssetId_GivesErrorIfOneExists" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="157206187" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:12:59Z" duration="0.198350" asserts="0">
              <properties />
              <output><![CDATA[Can not Set AssetId on NetworkIdentity 'New Game Object' becasue it already had an assetId, current assetId 'a4ca15bba54e445e866be4819a22a1fb', attempted new assetId '6bc5986a1dd541a39afaae5fe0613f64'
]]></output>
            </test-case>
            <test-case id="2302" name="SetClientOwner" fullname="Mirror.Tests.NetworkIdentityTests.SetClientOwner" methodname="SetClientOwner" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1167837751" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:12:59Z" duration="0.198035" asserts="0">
              <properties />
              <output><![CDATA[Object New Game Object (Mirror.NetworkIdentity) netId=0 already has an owner. Use RemoveClientAuthority() first: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2305" name="SetSceneIdSceneHashPartInternal" fullname="Mirror.Tests.NetworkIdentityTests.SetSceneIdSceneHashPartInternal" methodname="SetSceneIdSceneHashPartInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="401890455" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:12:59Z" duration="0.198610" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2353" name="NetworkManagerStopHostOnServerDisconnectTest" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:13:00Z" duration="0.248684" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2354" name="StopHostCallsOnServerDisconnectForHostClient" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest.StopHostCallsOnServerDisconnectForHostClient" methodname="StopHostCallsOnServerDisconnectForHostClient" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" seed="1692311975" result="Passed" start-time="2020-07-30 17:12:59Z" end-time="2020-07-30 17:13:00Z" duration="0.198922" asserts="0">
              <properties />
              <output><![CDATA[SendMessage cannot be called during Awake, CheckConsistency, or OnValidate
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectDestroyMessage, id=54308. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectHideMessage, id=3662. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.NetworkPongMessage, id=10297. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SpawnMessage, id=16484. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnStartedMessage, id=59786. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnFinishedMessage, id=34417. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.UpdateVarsMessage, id=16986. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.RpcMessage, id=33978. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SyncEventMessage, id=49824. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2355" name="NetworkManagerTest" fullname="Mirror.Tests.NetworkManagerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2020-07-30 17:13:00Z" end-time="2020-07-30 17:13:02Z" duration="2.090072" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2364" name="GetStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.GetStartPositionTest" methodname="GetStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="570288316" result="Passed" start-time="2020-07-30 17:13:00Z" end-time="2020-07-30 17:13:00Z" duration="0.196897" asserts="0">
              <properties />
            </test-case>
            <test-case id="2362" name="RegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.RegisterStartPositionTest" methodname="RegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1597934179" result="Passed" start-time="2020-07-30 17:13:00Z" end-time="2020-07-30 17:13:00Z" duration="0.198187" asserts="0">
              <properties />
            </test-case>
            <test-case id="2361" name="ShutdownTest" fullname="Mirror.Tests.NetworkManagerTest.ShutdownTest" methodname="ShutdownTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1275650708" result="Passed" start-time="2020-07-30 17:13:00Z" end-time="2020-07-30 17:13:00Z" duration="0.198214" asserts="0">
              <properties />
            </test-case>
            <test-case id="2359" name="StartClientTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientTest" methodname="StartClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="587902118" result="Passed" start-time="2020-07-30 17:13:00Z" end-time="2020-07-30 17:13:01Z" duration="0.199365" asserts="0">
              <properties />
            </test-case>
            <test-case id="2365" name="StartClientUriTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientUriTest" methodname="StartClientUriTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="2106939522" result="Passed" start-time="2020-07-30 17:13:01Z" end-time="2020-07-30 17:13:01Z" duration="0.197067" asserts="0">
              <properties />
            </test-case>
            <test-case id="2357" name="StartServerTest" fullname="Mirror.Tests.NetworkManagerTest.StartServerTest" methodname="StartServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="442559010" result="Passed" start-time="2020-07-30 17:13:01Z" end-time="2020-07-30 17:13:01Z" duration="0.199461" asserts="0">
              <properties />
            </test-case>
            <test-case id="2360" name="StopClientTest" fullname="Mirror.Tests.NetworkManagerTest.StopClientTest" methodname="StopClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="24705659" result="Passed" start-time="2020-07-30 17:13:01Z" end-time="2020-07-30 17:13:01Z" duration="0.198004" asserts="0">
              <properties />
              <output><![CDATA[NetworkClient.RegisterHandler replacing handler for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.DisconnectMessage, id=8819. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.NotReadyMessage, id=40959. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ErrorMessage, id=22839. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SceneMessage, id=30259. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectDestroyMessage, id=54308. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectHideMessage, id=3662. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.NetworkPongMessage, id=10297. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SpawnMessage, id=16484. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnStartedMessage, id=59786. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnFinishedMessage, id=34417. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.UpdateVarsMessage, id=16986. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.RpcMessage, id=33978. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SyncEventMessage, id=49824. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
            <test-case id="2358" name="StopServerTest" fullname="Mirror.Tests.NetworkManagerTest.StopServerTest" methodname="StopServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1788074123" result="Passed" start-time="2020-07-30 17:13:01Z" end-time="2020-07-30 17:13:01Z" duration="0.193214" asserts="0">
              <properties />
              <output><![CDATA[NetworkServer.RegisterHandler replacing handler for Mirror.ReadyMessage, id=40252. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.CommandMessage, id=46228. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.NetworkPingMessage, id=33151. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.DisconnectMessage, id=8819. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.AddPlayerMessage, id=13085. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.ErrorMessage, id=22839. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
            <test-case id="2363" name="UnRegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.UnRegisterStartPositionTest" methodname="UnRegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1450275322" result="Passed" start-time="2020-07-30 17:13:01Z" end-time="2020-07-30 17:13:02Z" duration="0.194391" asserts="0">
              <properties />
            </test-case>
            <test-case id="2356" name="VariableTest" fullname="Mirror.Tests.NetworkManagerTest.VariableTest" methodname="VariableTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1472068769" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:02Z" duration="0.199508" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2366" name="NetworkMatchCheckerTest" fullname="Mirror.Tests.NetworkMatchCheckerTest" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:03Z" duration="1.485538" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2372" name="ChangingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ChangingMatchIdShouldRebuildObservers" methodname="ChangingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="107401920" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:02Z" duration="0.199922" asserts="0">
              <properties />
            </test-case>
            <test-case id="2373" name="ClearingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ClearingMatchIdShouldRebuildObservers" methodname="ClearingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1981891917" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:02Z" duration="0.196850" asserts="0">
              <properties />
            </test-case>
            <test-case id="2368" name="OnCheckObserverShouldBeFalseForDifferentMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForDifferentMatchId" methodname="OnCheckObserverShouldBeFalseForDifferentMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="2019982428" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:02Z" duration="0.198991" asserts="0">
              <properties />
            </test-case>
            <test-case id="2370" name="OnCheckObserverShouldBeFalseForEmptyGuid" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForEmptyGuid" methodname="OnCheckObserverShouldBeFalseForEmptyGuid" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="987458478" result="Passed" start-time="2020-07-30 17:13:02Z" end-time="2020-07-30 17:13:03Z" duration="0.199180" asserts="0">
              <properties />
            </test-case>
            <test-case id="2369" name="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" methodname="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="823426904" result="Passed" start-time="2020-07-30 17:13:03Z" end-time="2020-07-30 17:13:03Z" duration="0.198194" asserts="0">
              <properties />
            </test-case>
            <test-case id="2367" name="OnCheckObserverShouldBeTrueForSameMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeTrueForSameMatchId" methodname="OnCheckObserverShouldBeTrueForSameMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1242870398" result="Passed" start-time="2020-07-30 17:13:03Z" end-time="2020-07-30 17:13:03Z" duration="0.197460" asserts="0">
              <properties />
            </test-case>
            <test-case id="2371" name="SettingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.SettingMatchIdShouldRebuildObservers" methodname="SettingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1398950178" result="Passed" start-time="2020-07-30 17:13:03Z" end-time="2020-07-30 17:13:03Z" duration="0.198717" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2374" name="NetworkReaderPoolTest" fullname="Mirror.Tests.NetworkReaderPoolTest" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:13:03Z" end-time="2020-07-30 17:13:04Z" duration="1.093053" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2379" name="GrowCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="229171632" result="Passed" start-time="2020-07-30 17:13:03Z" end-time="2020-07-30 17:13:04Z" duration="0.200678" asserts="0">
              <properties />
            </test-case>
            <test-case id="2376" name="PoolCanGetMoreReadersThanPoolSize" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolCanGetMoreReadersThanPoolSize" methodname="PoolCanGetMoreReadersThanPoolSize" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="757842080" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.198231" asserts="0">
              <properties />
            </test-case>
            <test-case id="2377" name="PoolReUsesReadersUpToSizeLimit" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolReUsesReadersUpToSizeLimit" methodname="PoolReUsesReadersUpToSizeLimit" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="203572426" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.198163" asserts="0">
              <properties />
            </test-case>
            <test-case id="2378" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="1647826270" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.198970" asserts="0">
              <properties />
            </test-case>
            <test-case id="2375" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkReaderPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="737669045" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.198572" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2380" name="NetworkReaderTest" fullname="Mirror.Tests.NetworkReaderTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.096476" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2381" name="ReadBytesCountTooBigTest" fullname="Mirror.Tests.NetworkReaderTest.ReadBytesCountTooBigTest" methodname="ReadBytesCountTooBigTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" seed="1711802424" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:04Z" duration="0.001290" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2382" name="NetworkServerTest" fullname="Mirror.Tests.NetworkServerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="34" result="Passed" start-time="2020-07-30 17:13:04Z" end-time="2020-07-30 17:13:11Z" duration="6.997705" total="34" passed="34" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2403" name="ActivateHostSceneCallsOnStartClient" fullname="Mirror.Tests.NetworkServerTest.ActivateHostSceneCallsOnStartClient" methodname="ActivateHostSceneCallsOnStartClient" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="441142144" result="Passed" start-time="2020-07-30 17:13:05Z" end-time="2020-07-30 17:13:05Z" duration="0.196567" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2393" name="AddConnectionTest" fullname="Mirror.Tests.NetworkServerTest.AddConnectionTest" methodname="AddConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1921050079" result="Passed" start-time="2020-07-30 17:13:05Z" end-time="2020-07-30 17:13:05Z" duration="0.197442" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2402" name="CommandMessageCallsCommandTest" fullname="Mirror.Tests.NetworkServerTest.CommandMessageCallsCommandTest" methodname="CommandMessageCallsCommandTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="682955392" result="Passed" start-time="2020-07-30 17:13:05Z" end-time="2020-07-30 17:13:05Z" duration="0.196627" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Command for object without authority [netId=42]
Spawned object not found when handling Command message [netId=43]
]]></output>
            </test-case>
            <test-case id="2389" name="ConnectDuplicateConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.ConnectDuplicateConnectionIdsTest" methodname="ConnectDuplicateConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1706944033" result="Passed" start-time="2020-07-30 17:13:05Z" end-time="2020-07-30 17:13:05Z" duration="0.198572" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2387" name="ConnectionsDictTest" fullname="Mirror.Tests.NetworkServerTest.ConnectionsDictTest" methodname="ConnectionsDictTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1529044346" result="Passed" start-time="2020-07-30 17:13:05Z" end-time="2020-07-30 17:13:06Z" duration="0.197195" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2385" name="ConnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.ConnectMessageHandlerTest" methodname="ConnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="803565714" result="Passed" start-time="2020-07-30 17:13:06Z" end-time="2020-07-30 17:13:06Z" duration="0.197651" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2395" name="DisconnectAllConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllConnectionsTest" methodname="DisconnectAllConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="747506040" result="Passed" start-time="2020-07-30 17:13:06Z" end-time="2020-07-30 17:13:06Z" duration="0.197173" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2396" name="DisconnectAllTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllTest" methodname="DisconnectAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1530063849" result="Passed" start-time="2020-07-30 17:13:06Z" end-time="2020-07-30 17:13:06Z" duration="0.197751" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2386" name="DisconnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectMessageHandlerTest" methodname="DisconnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1465231344" result="Passed" start-time="2020-07-30 17:13:06Z" end-time="2020-07-30 17:13:06Z" duration="0.198065" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2407" name="GetNetworkIdentity" fullname="Mirror.Tests.NetworkServerTest.GetNetworkIdentity" methodname="GetNetworkIdentity" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2030079843" result="Passed" start-time="2020-07-30 17:13:06Z" end-time="2020-07-30 17:13:07Z" duration="0.198072" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
GameObject New Game Object doesn't have NetworkIdentity.
]]></output>
            </test-case>
            <test-case id="2409" name="HideForConnection" fullname="Mirror.Tests.NetworkServerTest.HideForConnection" methodname="HideForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="821998784" result="Passed" start-time="2020-07-30 17:13:07Z" end-time="2020-07-30 17:13:07Z" duration="0.197890" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2383" name="IsActiveTest" fullname="Mirror.Tests.NetworkServerTest.IsActiveTest" methodname="IsActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1378890820" result="Passed" start-time="2020-07-30 17:13:07Z" end-time="2020-07-30 17:13:07Z" duration="0.197469" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2392" name="LocalClientActiveTest" fullname="Mirror.Tests.NetworkServerTest.LocalClientActiveTest" methodname="LocalClientActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1885046309" result="Passed" start-time="2020-07-30 17:13:07Z" end-time="2020-07-30 17:13:07Z" duration="0.198583" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2384" name="MaxConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.MaxConnectionsTest" methodname="MaxConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2118663767" result="Passed" start-time="2020-07-30 17:13:07Z" end-time="2020-07-30 17:13:07Z" duration="0.197312" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2388" name="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" methodname="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1268608844" result="Passed" start-time="2020-07-30 17:13:07Z" end-time="2020-07-30 17:13:08Z" duration="0.197547" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Server.HandleConnect: invalid connectionId: 0 . Needs to be >0, because 0 is reserved for local player.
Server.HandleConnect: invalid connectionId: -1 . Needs to be >0, because 0 is reserved for local player.
]]></output>
            </test-case>
            <test-case id="2398" name="OnDataReceivedInvalidConnectionIdTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedInvalidConnectionIdTest" methodname="OnDataReceivedInvalidConnectionIdTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1115682542" result="Passed" start-time="2020-07-30 17:13:08Z" end-time="2020-07-30 17:13:08Z" duration="0.197233" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
HandleData Unknown connectionId:42
]]></output>
            </test-case>
            <test-case id="2397" name="OnDataReceivedTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedTest" methodname="OnDataReceivedTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="968979844" result="Passed" start-time="2020-07-30 17:13:08Z" end-time="2020-07-30 17:13:08Z" duration="0.196398" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2401" name="ReadyMessageSetsClientReadyTest" fullname="Mirror.Tests.NetworkServerTest.ReadyMessageSetsClientReadyTest" methodname="ReadyMessageSetsClientReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1391964872" result="Passed" start-time="2020-07-30 17:13:08Z" end-time="2020-07-30 17:13:08Z" duration="0.198563" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2405" name="RegisterUnregisterClearHandlerTest" fullname="Mirror.Tests.NetworkServerTest.RegisterUnregisterClearHandlerTest" methodname="RegisterUnregisterClearHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="949761976" result="Passed" start-time="2020-07-30 17:13:08Z" end-time="2020-07-30 17:13:08Z" duration="0.197861" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2394" name="RemoveConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveConnectionTest" methodname="RemoveConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1847697303" result="Passed" start-time="2020-07-30 17:13:08Z" end-time="2020-07-30 17:13:09Z" duration="0.197130" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2391" name="RemoveLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveLocalConnectionTest" methodname="RemoveLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="798229580" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:09Z" duration="0.197858" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2414" name="ResetTest" fullname="Mirror.Tests.NetworkServerTest.ResetTest" methodname="ResetTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="176915447" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:09Z" duration="0.197515" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="2417" name="SendCalledWhileNotActive_ShouldGiveWarning" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:09Z" duration="0.500639" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2415" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1711447402" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:09Z" duration="0.200497" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Can not send using NetworkServer.SendToAll<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
              <test-case id="2416" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1700007874" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:09Z" duration="0.196491" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Can not send using NetworkServer.SendToReady<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
            </test-suite>
            <test-case id="2404" name="SendToAllTest" fullname="Mirror.Tests.NetworkServerTest.SendToAllTest" methodname="SendToAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="828567516" result="Passed" start-time="2020-07-30 17:13:09Z" end-time="2020-07-30 17:13:10Z" duration="0.192959" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2406" name="SendToClientOfPlayer" fullname="Mirror.Tests.NetworkServerTest.SendToClientOfPlayer" methodname="SendToClientOfPlayer" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1696363732" result="Passed" start-time="2020-07-30 17:13:10Z" end-time="2020-07-30 17:13:10Z" duration="0.198628" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2400" name="SetAllClientsNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetAllClientsNotReadyTest" methodname="SetAllClientsNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="449662076" result="Passed" start-time="2020-07-30 17:13:10Z" end-time="2020-07-30 17:13:10Z" duration="0.196625" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2399" name="SetClientReadyAndNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetClientReadyAndNotReadyTest" methodname="SetClientReadyAndNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="399425913" result="Passed" start-time="2020-07-30 17:13:10Z" end-time="2020-07-30 17:13:10Z" duration="0.198125" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2390" name="SetLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.SetLocalConnectionTest" methodname="SetLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="325515073" result="Passed" start-time="2020-07-30 17:13:10Z" end-time="2020-07-30 17:13:10Z" duration="0.198398" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Local Connection already exists
]]></output>
            </test-case>
            <test-case id="2408" name="ShowForConnection" fullname="Mirror.Tests.NetworkServerTest.ShowForConnection" methodname="ShowForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1620062859" result="Passed" start-time="2020-07-30 17:13:10Z" end-time="2020-07-30 17:13:11Z" duration="0.197662" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2413" name="ShutdownCleanupTest" fullname="Mirror.Tests.NetworkServerTest.ShutdownCleanupTest" methodname="ShutdownCleanupTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1619472914" result="Passed" start-time="2020-07-30 17:13:11Z" end-time="2020-07-30 17:13:11Z" duration="0.197946" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2411" name="SpawnObjects" fullname="Mirror.Tests.NetworkServerTest.SpawnObjects" methodname="SpawnObjects" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="586329768" result="Passed" start-time="2020-07-30 17:13:11Z" end-time="2020-07-30 17:13:11Z" duration="0.196940" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2412" name="UnSpawn" fullname="Mirror.Tests.NetworkServerTest.UnSpawn" methodname="UnSpawn" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="64717742" result="Passed" start-time="2020-07-30 17:13:11Z" end-time="2020-07-30 17:13:11Z" duration="0.197831" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2410" name="ValidateSceneObject" fullname="Mirror.Tests.NetworkServerTest.ValidateSceneObject" methodname="ValidateSceneObject" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="996765436" result="Passed" start-time="2020-07-30 17:13:11Z" end-time="2020-07-30 17:13:11Z" duration="0.198910" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2418" name="NetworkTransformChildTest" fullname="Mirror.Tests.NetworkTransformChildTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:11Z" end-time="2020-07-30 17:13:12Z" duration="0.065363" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2419" name="TargetComponentTest" fullname="Mirror.Tests.NetworkTransformChildTest.TargetComponentTest" methodname="TargetComponentTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" seed="1953519333" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.001610" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2420" name="NetworkTransformTest" fullname="Mirror.Tests.NetworkTransformTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.100467" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2421" name="SerializeIntoWriterTest" fullname="Mirror.Tests.NetworkTransformTest.SerializeIntoWriterTest" methodname="SerializeIntoWriterTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" seed="129747598" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.001335" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2422" name="NetworkWriterPoolTest" fullname="Mirror.Tests.NetworkWriterPoolTest" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:13Z" duration="1.094757" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2427" name="GrowCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1907154699" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.196755" asserts="0">
              <properties />
            </test-case>
            <test-case id="2424" name="PoolCanGetMoreWritersThanPoolSize" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolCanGetMoreWritersThanPoolSize" methodname="PoolCanGetMoreWritersThanPoolSize" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="662898138" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.198849" asserts="0">
              <properties />
            </test-case>
            <test-case id="2425" name="PoolReUsesWritersUpToSizeLimit" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolReUsesWritersUpToSizeLimit" methodname="PoolReUsesWritersUpToSizeLimit" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1134497252" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:12Z" duration="0.197656" asserts="0">
              <properties />
            </test-case>
            <test-case id="2426" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="132845861" result="Passed" start-time="2020-07-30 17:13:12Z" end-time="2020-07-30 17:13:13Z" duration="0.198443" asserts="0">
              <properties />
            </test-case>
            <test-case id="2423" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkWriterPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="518583005" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.198915" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2428" name="NetworkWriterTest" fullname="Mirror.Tests.NetworkWriterTest" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="55" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.250673" total="55" passed="55" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2474" name="TestByteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestByteEndianness" methodname="TestByteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="866922035" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.003054" asserts="0">
              <properties />
            </test-case>
            <test-case id="2459" name="TestChar" fullname="Mirror.Tests.NetworkWriterTest.TestChar" methodname="TestChar" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="466719176" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002100" asserts="0">
              <properties />
            </test-case>
            <test-case id="2448" name="TestColor" fullname="Mirror.Tests.NetworkWriterTest.TestColor" methodname="TestColor" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="486208273" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002813" asserts="0">
              <properties />
            </test-case>
            <test-case id="2449" name="TestColor32" fullname="Mirror.Tests.NetworkWriterTest.TestColor32" methodname="TestColor32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="989117256" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002029" asserts="0">
              <properties />
            </test-case>
            <test-case id="2473" name="TestDecimalBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDecimalBinaryCompatibility" methodname="TestDecimalBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="861571409" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001850" asserts="0">
              <properties />
            </test-case>
            <test-case id="2470" name="TestDecimals" fullname="Mirror.Tests.NetworkWriterTest.TestDecimals" methodname="TestDecimals" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1915159783" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002319" asserts="0">
              <properties />
            </test-case>
            <test-case id="2472" name="TestDoubleBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDoubleBinaryCompatibility" methodname="TestDoubleBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="846866768" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001172" asserts="0">
              <properties />
            </test-case>
            <test-case id="2469" name="TestDoubles" fullname="Mirror.Tests.NetworkWriterTest.TestDoubles" methodname="TestDoubles" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1705895204" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001211" asserts="0">
              <properties />
            </test-case>
            <test-case id="2471" name="TestFloatBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestFloatBinaryCompatibility" methodname="TestFloatBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1404409961" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001071" asserts="0">
              <properties />
            </test-case>
            <test-case id="2468" name="TestFloats" fullname="Mirror.Tests.NetworkWriterTest.TestFloats" methodname="TestFloats" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="765024865" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001151" asserts="0">
              <properties />
            </test-case>
            <test-case id="2467" name="TestGuid" fullname="Mirror.Tests.NetworkWriterTest.TestGuid" methodname="TestGuid" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2143829718" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001169" asserts="0">
              <properties />
            </test-case>
            <test-case id="2480" name="TestIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestIntEndianness" methodname="TestIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1431408233" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001043" asserts="0">
              <properties />
            </test-case>
            <test-case id="2481" name="TestLongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestLongEndianness" methodname="TestLongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2132747260" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001190" asserts="0">
              <properties />
            </test-case>
            <test-case id="2454" name="TestMatrix4x4" fullname="Mirror.Tests.NetworkWriterTest.TestMatrix4x4" methodname="TestMatrix4x4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="606146601" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.003290" asserts="0">
              <properties />
            </test-case>
            <test-case id="2463" name="TestPackedInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32" methodname="TestPackedInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="643484076" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001324" asserts="0">
              <properties />
            </test-case>
            <test-case id="2464" name="TestPackedInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32Failure" methodname="TestPackedInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="832613340" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001890" asserts="0">
              <properties />
            </test-case>
            <test-case id="2466" name="TestPackedInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt64" methodname="TestPackedInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2036131449" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002363" asserts="0">
              <properties />
            </test-case>
            <test-case id="2461" name="TestPackedUInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32" methodname="TestPackedUInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="427397548" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001146" asserts="0">
              <properties />
            </test-case>
            <test-case id="2462" name="TestPackedUInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32Failure" methodname="TestPackedUInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1297622436" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001436" asserts="0">
              <properties />
            </test-case>
            <test-case id="2465" name="TestPackedUInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt64" methodname="TestPackedUInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1428319525" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001538" asserts="0">
              <properties />
            </test-case>
            <test-case id="2452" name="TestPlane" fullname="Mirror.Tests.NetworkWriterTest.TestPlane" methodname="TestPlane" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="322197598" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002899" asserts="0">
              <properties />
            </test-case>
            <test-case id="2450" name="TestQuaternion" fullname="Mirror.Tests.NetworkWriterTest.TestQuaternion" methodname="TestQuaternion" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1039374599" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001291" asserts="0">
              <properties />
            </test-case>
            <test-case id="2453" name="TestRay" fullname="Mirror.Tests.NetworkWriterTest.TestRay" methodname="TestRay" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1179685991" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002042" asserts="0">
              <properties />
            </test-case>
            <test-case id="2440" name="TestReading0LengthBytes" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytes" methodname="TestReading0LengthBytes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1869995583" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001029" asserts="0">
              <properties />
            </test-case>
            <test-case id="2439" name="TestReading0LengthBytesAndSize" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytesAndSize" methodname="TestReading0LengthBytesAndSize" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1040654850" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.000981" asserts="0">
              <properties />
            </test-case>
            <test-case id="2455" name="TestReadingInvalidString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingInvalidString" methodname="TestReadingInvalidString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="954599007" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.003176" asserts="0">
              <properties />
            </test-case>
            <test-case id="2438" name="TestReadingLengthWrapAround" fullname="Mirror.Tests.NetworkWriterTest.TestReadingLengthWrapAround" methodname="TestReadingLengthWrapAround" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="990713440" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001193" asserts="0">
              <properties />
            </test-case>
            <test-case id="2442" name="TestReadingTooMuch" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTooMuch" methodname="TestReadingTooMuch" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1106111365" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.028273" asserts="0">
              <properties />
            </test-case>
            <test-case id="2456" name="TestReadingTruncatedString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTruncatedString" methodname="TestReadingTruncatedString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="449753741" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001305" asserts="0">
              <properties />
            </test-case>
            <test-case id="2451" name="TestRect" fullname="Mirror.Tests.NetworkWriterTest.TestRect" methodname="TestRect" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="449313381" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001988" asserts="0">
              <properties />
            </test-case>
            <test-case id="2437" name="TestResetSetsPotionAndLength" fullname="Mirror.Tests.NetworkWriterTest.TestResetSetsPotionAndLength" methodname="TestResetSetsPotionAndLength" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="602013741" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001019" asserts="0">
              <properties />
            </test-case>
            <test-case id="2478" name="TestSbyteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestSbyteEndianness" methodname="TestSbyteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="619999068" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001069" asserts="0">
              <properties />
            </test-case>
            <test-case id="2436" name="TestSetLengthInitialization" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthInitialization" methodname="TestSetLengthInitialization" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="368686675" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001083" asserts="0">
              <properties />
            </test-case>
            <test-case id="2435" name="TestSetLengthZeroes" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthZeroes" methodname="TestSetLengthZeroes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1105730283" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001331" asserts="0">
              <properties />
            </test-case>
            <test-case id="2479" name="TestShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestShortEndianness" methodname="TestShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1395922000" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001029" asserts="0">
              <properties />
            </test-case>
            <test-case id="2457" name="TestToArray" fullname="Mirror.Tests.NetworkWriterTest.TestToArray" methodname="TestToArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1922497559" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001048" asserts="0">
              <properties />
            </test-case>
            <test-case id="2458" name="TestToArraySegment" fullname="Mirror.Tests.NetworkWriterTest.TestToArraySegment" methodname="TestToArraySegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2038636880" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001069" asserts="0">
              <properties />
            </test-case>
            <test-case id="2476" name="TestUIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUIntEndianness" methodname="TestUIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="309755449" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001023" asserts="0">
              <properties />
            </test-case>
            <test-case id="2477" name="TestULongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestULongEndianness" methodname="TestULongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="809559214" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001059" asserts="0">
              <properties />
            </test-case>
            <test-case id="2460" name="TestUnicodeString" fullname="Mirror.Tests.NetworkWriterTest.TestUnicodeString" methodname="TestUnicodeString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="417715988" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001443" asserts="0">
              <properties />
            </test-case>
            <test-case id="2475" name="TestUShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUShortEndianness" methodname="TestUShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2068282306" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001025" asserts="0">
              <properties />
            </test-case>
            <test-case id="2443" name="TestVector2" fullname="Mirror.Tests.NetworkWriterTest.TestVector2" methodname="TestVector2" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1504262286" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001977" asserts="0">
              <properties />
            </test-case>
            <test-case id="2446" name="TestVector2Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector2Int" methodname="TestVector2Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1690563036" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002104" asserts="0">
              <properties />
            </test-case>
            <test-case id="2444" name="TestVector3" fullname="Mirror.Tests.NetworkWriterTest.TestVector3" methodname="TestVector3" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1076470242" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001448" asserts="0">
              <properties />
            </test-case>
            <test-case id="2447" name="TestVector3Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector3Int" methodname="TestVector3Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="205118412" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.002198" asserts="0">
              <properties />
            </test-case>
            <test-case id="2445" name="TestVector4" fullname="Mirror.Tests.NetworkWriterTest.TestVector4" methodname="TestVector4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="62678416" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001887" asserts="0">
              <properties />
            </test-case>
            <test-case id="2482" name="TestWritingAndReading" fullname="Mirror.Tests.NetworkWriterTest.TestWritingAndReading" methodname="TestWritingAndReading" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="182266912" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.003284" asserts="0">
              <properties />
            </test-case>
            <test-case id="2433" name="TestWritingBytesAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesAndReadingSegment" methodname="TestWritingBytesAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="513573861" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001061" asserts="0">
              <properties />
            </test-case>
            <test-case id="2432" name="TestWritingBytesSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesSegment" methodname="TestWritingBytesSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="993380327" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001082" asserts="0">
              <properties />
            </test-case>
            <test-case id="2431" name="TestWritingHugeArray" fullname="Mirror.Tests.NetworkWriterTest.TestWritingHugeArray" methodname="TestWritingHugeArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1468211003" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001146" asserts="0">
              <properties />
            </test-case>
            <test-case id="2430" name="TestWritingLargeMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingLargeMessage" methodname="TestWritingLargeMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1265276295" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001332" asserts="0">
              <properties />
            </test-case>
            <test-case id="2441" name="TestWritingNegativeBytesAndSizeFailure" fullname="Mirror.Tests.NetworkWriterTest.TestWritingNegativeBytesAndSizeFailure" methodname="TestWritingNegativeBytesAndSizeFailure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1834354380" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001129" asserts="0">
              <properties />
            </test-case>
            <test-case id="2434" name="TestWritingSegmentAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSegmentAndReadingSegment" methodname="TestWritingSegmentAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2016177716" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001112" asserts="0">
              <properties />
            </test-case>
            <test-case id="2429" name="TestWritingSmallMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSmallMessage" methodname="TestWritingSmallMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1636486364" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.001483" asserts="0">
              <properties />
            </test-case>
            <test-case id="2483" name="TestWritingUri" fullname="Mirror.Tests.NetworkWriterTest.TestWritingUri" methodname="TestWritingUri" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="868777669" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.003801" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2813" name="RemoteAttrributeTest" fullname="Mirror.Tests.RemoteAttrributeTest" runstate="Runnable" testcasecount="26" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:19Z" duration="6.021147" total="26" passed="26" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2767" name="ClientRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:14Z" duration="0.897026" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2770" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="806249793" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:13Z" duration="0.199773" asserts="0">
                <properties />
              </test-case>
              <test-case id="2771" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1215651937" result="Passed" start-time="2020-07-30 17:13:13Z" end-time="2020-07-30 17:13:14Z" duration="0.197831" asserts="0">
                <properties />
              </test-case>
              <test-case id="2769" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1017632269" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:14Z" duration="0.198050" asserts="0">
                <properties />
              </test-case>
              <test-case id="2768" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1508969125" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:14Z" duration="0.198359" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2772" name="ClientRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:15Z" duration="0.695996" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2773" name="RpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalled" methodname="RpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="1148827704" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:14Z" duration="0.198396" asserts="0">
                <properties />
              </test-case>
              <test-case id="2774" name="RpcIsCalledForNotOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalledForNotOwnerd" methodname="RpcIsCalledForNotOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="81411904" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:14Z" duration="0.199576" asserts="0">
                <properties />
              </test-case>
              <test-case id="2775" name="RpcNotCalledForOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcNotCalledForOwnerd" methodname="RpcNotCalledForOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="2042990218" result="Passed" start-time="2020-07-30 17:13:14Z" end-time="2020-07-30 17:13:15Z" duration="0.198137" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2776" name="CommandOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:13:15Z" end-time="2020-07-30 17:13:16Z" duration="1.097559" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2779" name="OverrideVirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualCommandIsCalled" methodname="OverrideVirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="2143198311" result="Passed" start-time="2020-07-30 17:13:15Z" end-time="2020-07-30 17:13:15Z" duration="0.198843" asserts="0">
                <properties />
              </test-case>
              <test-case id="2781" name="OverrideVirtualWithBaseCallsAllMethodsThatCallBase" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualWithBaseCallsAllMethodsThatCallBase" methodname="OverrideVirtualWithBaseCallsAllMethodsThatCallBase" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1117846126" result="Passed" start-time="2020-07-30 17:13:15Z" end-time="2020-07-30 17:13:15Z" duration="0.197784" asserts="0">
                <properties />
              </test-case>
              <test-case id="2780" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1100006243" result="Passed" start-time="2020-07-30 17:13:15Z" end-time="2020-07-30 17:13:15Z" duration="0.198910" asserts="0">
                <properties />
              </test-case>
              <test-case id="2777" name="VirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandIsCalled" methodname="VirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1700944012" result="Passed" start-time="2020-07-30 17:13:15Z" end-time="2020-07-30 17:13:16Z" duration="0.198514" asserts="0">
                <properties />
              </test-case>
              <test-case id="2778" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="227301291" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:16Z" duration="0.198030" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2782" name="CommandTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:17Z" duration="1.295297" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2783" name="CommandIsSentWithAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthority" methodname="CommandIsSentWithAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1710387874" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:16Z" duration="0.198757" asserts="0">
                <properties />
              </test-case>
              <test-case id="2785" name="CommandIsSentWithAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1913013898" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:16Z" duration="0.198649" asserts="0">
                <properties />
              </test-case>
              <test-case id="2786" name="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithoutAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="265095572" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:16Z" duration="0.197882" asserts="0">
                <properties />
              </test-case>
              <test-case id="2787" name="SenderConnectionIsSetWhenCommandIsRecieved" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecieved" methodname="SenderConnectionIsSetWhenCommandIsRecieved" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="2084816007" result="Passed" start-time="2020-07-30 17:13:16Z" end-time="2020-07-30 17:13:17Z" duration="0.198033" asserts="0">
                <properties />
              </test-case>
              <test-case id="2788" name="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" methodname="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="860988152" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:17Z" duration="0.198130" asserts="0">
                <properties />
              </test-case>
              <test-case id="2784" name="WarningForCommandSentWithoutAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.WarningForCommandSentWithoutAuthority" methodname="WarningForCommandSentWithoutAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1483174454" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:17Z" duration="0.198194" asserts="0">
                <properties />
                <output><![CDATA[Trying to send command for object without authority. Mirror.Tests.RemoteAttrributeTest.AuthorityBehaviour.SendInt
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2789" name="SyncEventSameNameTest" fullname="Mirror.Tests.RemoteAttrributeTest.SyncEventSameNameTest" classname="Mirror.Tests.RemoteAttrributeTest.SyncEventSameNameTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:17Z" duration="0.292770" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2790" name="EventsWithSameNameCanBothBeCalled" fullname="Mirror.Tests.RemoteAttrributeTest.SyncEventSameNameTest.EventsWithSameNameCanBothBeCalled" methodname="EventsWithSameNameCanBothBeCalled" classname="Mirror.Tests.RemoteAttrributeTest.SyncEventSameNameTest" runstate="Runnable" seed="296531887" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:17Z" duration="0.198632" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2791" name="SyncEventTest" fullname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest" classname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:18Z" duration="0.496979" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2792" name="FirstEventIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest.FirstEventIsCalled" methodname="FirstEventIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest" runstate="Runnable" seed="1774661130" result="Passed" start-time="2020-07-30 17:13:17Z" end-time="2020-07-30 17:13:18Z" duration="0.196634" asserts="0">
                <properties />
              </test-case>
              <test-case id="2793" name="SecondEventIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest.SecondEventIsCalled" methodname="SecondEventIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.SyncEventTest" runstate="Runnable" seed="1646669637" result="Passed" start-time="2020-07-30 17:13:18Z" end-time="2020-07-30 17:13:18Z" duration="0.197459" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2794" name="TargetRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-07-30 17:13:18Z" end-time="2020-07-30 17:13:19Z" duration="0.897711" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2797" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="804361571" result="Passed" start-time="2020-07-30 17:13:18Z" end-time="2020-07-30 17:13:18Z" duration="0.199618" asserts="0">
                <properties />
              </test-case>
              <test-case id="2798" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="1955150931" result="Passed" start-time="2020-07-30 17:13:18Z" end-time="2020-07-30 17:13:18Z" duration="0.197943" asserts="0">
                <properties />
              </test-case>
              <test-case id="2796" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="914855248" result="Passed" start-time="2020-07-30 17:13:18Z" end-time="2020-07-30 17:13:19Z" duration="0.198430" asserts="0">
                <properties />
              </test-case>
              <test-case id="2795" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="515158257" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.198029" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2799" name="TargetRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.294855" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2800" name="RpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.RpcIsCalled" methodname="RpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="736305892" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.199953" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2484" name="ScriptableObjectWriterTest" fullname="Mirror.Tests.ScriptableObjectWriterTest" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.083970" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2485" name="TestWriteScriptableObject" fullname="Mirror.Tests.ScriptableObjectWriterTest.TestWriteScriptableObject" methodname="TestWriteScriptableObject" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" seed="586671939" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.002140" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2808" name="StructMessages" fullname="Mirror.Tests.StructMessages" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.199188" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2615" name="StructMessagesTests" fullname="Mirror.Tests.StructMessages.StructMessagesTests" classname="Mirror.Tests.StructMessages.StructMessagesTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.100160" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2616" name="SerializeAreAddedWhenEmptyInStruct" fullname="Mirror.Tests.StructMessages.StructMessagesTests.SerializeAreAddedWhenEmptyInStruct" methodname="SerializeAreAddedWhenEmptyInStruct" classname="Mirror.Tests.StructMessages.StructMessagesTests" runstate="Runnable" seed="456638955" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:19Z" duration="0.001751" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2486" name="SyncDictionaryTest" fullname="Mirror.Tests.SyncDictionaryTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" testcasecount="26" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:25Z" duration="5.292691" total="26" passed="26" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2500" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1902666670" result="Passed" start-time="2020-07-30 17:13:19Z" end-time="2020-07-30 17:13:20Z" duration="0.196729" asserts="0">
              <properties />
            </test-case>
            <test-case id="2498" name="CallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="704057780" result="Passed" start-time="2020-07-30 17:13:20Z" end-time="2020-07-30 17:13:20Z" duration="0.198589" asserts="0">
              <properties />
            </test-case>
            <test-case id="2504" name="CopyToOutOfBoundsTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfBoundsTest" methodname="CopyToOutOfBoundsTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1156508763" result="Passed" start-time="2020-07-30 17:13:20Z" end-time="2020-07-30 17:13:20Z" duration="0.199039" asserts="0">
              <properties />
            </test-case>
            <test-case id="2503" name="CopyToOutOfRangeTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfRangeTest" methodname="CopyToOutOfRangeTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="542619888" result="Passed" start-time="2020-07-30 17:13:20Z" end-time="2020-07-30 17:13:20Z" duration="0.197661" asserts="0">
              <properties />
            </test-case>
            <test-case id="2502" name="CopyToTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToTest" methodname="CopyToTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="203388032" result="Passed" start-time="2020-07-30 17:13:20Z" end-time="2020-07-30 17:13:20Z" duration="0.198180" asserts="0">
              <properties />
            </test-case>
            <test-case id="2501" name="CountTest" fullname="Mirror.Tests.SyncDictionaryTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1329802917" result="Passed" start-time="2020-07-30 17:13:20Z" end-time="2020-07-30 17:13:21Z" duration="0.199424" asserts="0">
              <properties />
            </test-case>
            <test-case id="2508" name="DirtyTest" fullname="Mirror.Tests.SyncDictionaryTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="976620104" result="Passed" start-time="2020-07-30 17:13:21Z" end-time="2020-07-30 17:13:21Z" duration="0.197545" asserts="0">
              <properties />
            </test-case>
            <test-case id="2509" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncDictionaryTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1227968040" result="Passed" start-time="2020-07-30 17:13:21Z" end-time="2020-07-30 17:13:21Z" duration="0.199563" asserts="0">
              <properties />
            </test-case>
            <test-case id="2506" name="ReadOnlyTest" fullname="Mirror.Tests.SyncDictionaryTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="517806358" result="Passed" start-time="2020-07-30 17:13:21Z" end-time="2020-07-30 17:13:21Z" duration="0.197758" asserts="0">
              <properties />
            </test-case>
            <test-case id="2511" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="733881282" result="Passed" start-time="2020-07-30 17:13:21Z" end-time="2020-07-30 17:13:21Z" duration="0.198838" asserts="0">
              <properties />
            </test-case>
            <test-case id="2512" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1075865295" result="Passed" start-time="2020-07-30 17:13:21Z" end-time="2020-07-30 17:13:22Z" duration="0.197812" asserts="0">
              <properties />
            </test-case>
            <test-case id="2510" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1683605840" result="Passed" start-time="2020-07-30 17:13:22Z" end-time="2020-07-30 17:13:22Z" duration="0.198874" asserts="0">
              <properties />
            </test-case>
            <test-case id="2499" name="ServerCallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.ServerCallbackTest" methodname="ServerCallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="377742023" result="Passed" start-time="2020-07-30 17:13:22Z" end-time="2020-07-30 17:13:22Z" duration="0.198842" asserts="0">
              <properties />
            </test-case>
            <test-case id="2488" name="TestAdd" fullname="Mirror.Tests.SyncDictionaryTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1734072014" result="Passed" start-time="2020-07-30 17:13:22Z" end-time="2020-07-30 17:13:22Z" duration="0.198527" asserts="0">
              <properties />
            </test-case>
            <test-case id="2491" name="TestBareSet" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSet" methodname="TestBareSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1900195632" result="Passed" start-time="2020-07-30 17:13:22Z" end-time="2020-07-30 17:13:22Z" duration="0.198417" asserts="0">
              <properties />
            </test-case>
            <test-case id="2492" name="TestBareSetNull" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSetNull" methodname="TestBareSetNull" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2075971916" result="Passed" start-time="2020-07-30 17:13:22Z" end-time="2020-07-30 17:13:23Z" duration="0.199382" asserts="0">
              <properties />
            </test-case>
            <test-case id="2489" name="TestClear" fullname="Mirror.Tests.SyncDictionaryTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1507438339" result="Passed" start-time="2020-07-30 17:13:23Z" end-time="2020-07-30 17:13:23Z" duration="0.198572" asserts="0">
              <properties />
            </test-case>
            <test-case id="2493" name="TestConsecutiveSet" fullname="Mirror.Tests.SyncDictionaryTest.TestConsecutiveSet" methodname="TestConsecutiveSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1624844885" result="Passed" start-time="2020-07-30 17:13:23Z" end-time="2020-07-30 17:13:23Z" duration="0.197905" asserts="0">
              <properties />
            </test-case>
            <test-case id="2497" name="TestContains" fullname="Mirror.Tests.SyncDictionaryTest.TestContains" methodname="TestContains" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="963106880" result="Passed" start-time="2020-07-30 17:13:23Z" end-time="2020-07-30 17:13:23Z" duration="0.198967" asserts="0">
              <properties />
            </test-case>
            <test-case id="2487" name="TestInit" fullname="Mirror.Tests.SyncDictionaryTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="145205749" result="Passed" start-time="2020-07-30 17:13:23Z" end-time="2020-07-30 17:13:23Z" duration="0.198072" asserts="0">
              <properties />
            </test-case>
            <test-case id="2496" name="TestMultSync" fullname="Mirror.Tests.SyncDictionaryTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1588460144" result="Passed" start-time="2020-07-30 17:13:23Z" end-time="2020-07-30 17:13:24Z" duration="0.198466" asserts="0">
              <properties />
            </test-case>
            <test-case id="2494" name="TestNullSet" fullname="Mirror.Tests.SyncDictionaryTest.TestNullSet" methodname="TestNullSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="490057271" result="Passed" start-time="2020-07-30 17:13:24Z" end-time="2020-07-30 17:13:24Z" duration="0.198836" asserts="0">
              <properties />
            </test-case>
            <test-case id="2495" name="TestRemove" fullname="Mirror.Tests.SyncDictionaryTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1073792739" result="Passed" start-time="2020-07-30 17:13:24Z" end-time="2020-07-30 17:13:24Z" duration="0.199417" asserts="0">
              <properties />
            </test-case>
            <test-case id="2505" name="TestRemovePair" fullname="Mirror.Tests.SyncDictionaryTest.TestRemovePair" methodname="TestRemovePair" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1954844807" result="Passed" start-time="2020-07-30 17:13:24Z" end-time="2020-07-30 17:13:24Z" duration="0.198525" asserts="0">
              <properties />
            </test-case>
            <test-case id="2490" name="TestSet" fullname="Mirror.Tests.SyncDictionaryTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="837002594" result="Passed" start-time="2020-07-30 17:13:24Z" end-time="2020-07-30 17:13:24Z" duration="0.197485" asserts="0">
              <properties />
            </test-case>
            <test-case id="2507" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncDictionaryTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1367273874" result="Passed" start-time="2020-07-30 17:13:24Z" end-time="2020-07-30 17:13:25Z" duration="0.199282" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2513" name="SyncListClassTest" fullname="Mirror.Tests.SyncListClassTest" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.094728" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2515" name="ClearShouldClearAll" fullname="Mirror.Tests.SyncListClassTest.ClearShouldClearAll" methodname="ClearShouldClearAll" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="1996385418" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.007909" asserts="0">
              <properties />
            </test-case>
            <test-case id="2514" name="RemoveShouldRemoveItem" fullname="Mirror.Tests.SyncListClassTest.RemoveShouldRemoveItem" methodname="RemoveShouldRemoveItem" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="1840079962" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.001608" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2516" name="SyncListStructTest" fullname="Mirror.Tests.SyncListStructTest" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.101872" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2517" name="ListIsDirtyWhenModifingAndSettingStruct" fullname="Mirror.Tests.SyncListStructTest.ListIsDirtyWhenModifingAndSettingStruct" methodname="ListIsDirtyWhenModifingAndSettingStruct" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="590826308" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.006908" asserts="0">
              <properties />
            </test-case>
            <test-case id="2518" name="OldValueShouldNotBeNewValue" fullname="Mirror.Tests.SyncListStructTest.OldValueShouldNotBeNewValue" methodname="OldValueShouldNotBeNewValue" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="1413175100" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.001106" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2519" name="SyncListTest" fullname="Mirror.Tests.SyncListTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" testcasecount="33" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:32Z" duration="6.685017" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2544" name="CallbackRemoveAtTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveAtTest" methodname="CallbackRemoveAtTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1312790812" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.195879" asserts="0">
              <properties />
            </test-case>
            <test-case id="2543" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="89310065" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:25Z" duration="0.198332" asserts="0">
              <properties />
            </test-case>
            <test-case id="2542" name="CallbackTest" fullname="Mirror.Tests.SyncListTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1127224072" result="Passed" start-time="2020-07-30 17:13:25Z" end-time="2020-07-30 17:13:26Z" duration="0.198915" asserts="0">
              <properties />
            </test-case>
            <test-case id="2545" name="CountTest" fullname="Mirror.Tests.SyncListTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="110222426" result="Passed" start-time="2020-07-30 17:13:26Z" end-time="2020-07-30 17:13:26Z" duration="0.198008" asserts="0">
              <properties />
            </test-case>
            <test-case id="2548" name="DirtyTest" fullname="Mirror.Tests.SyncListTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1046929937" result="Passed" start-time="2020-07-30 17:13:26Z" end-time="2020-07-30 17:13:26Z" duration="0.198633" asserts="0">
              <properties />
            </test-case>
            <test-case id="2549" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncListTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="841203315" result="Passed" start-time="2020-07-30 17:13:26Z" end-time="2020-07-30 17:13:26Z" duration="0.198387" asserts="0">
              <properties />
            </test-case>
            <test-case id="2546" name="ReadOnlyTest" fullname="Mirror.Tests.SyncListTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="933390628" result="Passed" start-time="2020-07-30 17:13:26Z" end-time="2020-07-30 17:13:26Z" duration="0.199219" asserts="0">
              <properties />
            </test-case>
            <test-case id="2551" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncListTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="884101687" result="Passed" start-time="2020-07-30 17:13:26Z" end-time="2020-07-30 17:13:27Z" duration="0.198417" asserts="0">
              <properties />
            </test-case>
            <test-case id="2552" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncListTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="854450337" result="Passed" start-time="2020-07-30 17:13:27Z" end-time="2020-07-30 17:13:27Z" duration="0.198616" asserts="0">
              <properties />
            </test-case>
            <test-case id="2550" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncListTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="495919476" result="Passed" start-time="2020-07-30 17:13:27Z" end-time="2020-07-30 17:13:27Z" duration="0.198520" asserts="0">
              <properties />
            </test-case>
            <test-case id="2539" name="SyncListBoolTest" fullname="Mirror.Tests.SyncListTest.SyncListBoolTest" methodname="SyncListBoolTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="446218717" result="Passed" start-time="2020-07-30 17:13:27Z" end-time="2020-07-30 17:13:27Z" duration="0.198911" asserts="0">
              <properties />
            </test-case>
            <test-case id="2541" name="SyncListFloatTest" fullname="Mirror.Tests.SyncListTest.SyncListFloatTest" methodname="SyncListFloatTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="114789301" result="Passed" start-time="2020-07-30 17:13:27Z" end-time="2020-07-30 17:13:27Z" duration="0.198416" asserts="0">
              <properties />
            </test-case>
            <test-case id="2538" name="SyncListIntTest" fullname="Mirror.Tests.SyncListTest.SyncListIntTest" methodname="SyncListIntTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1020322495" result="Passed" start-time="2020-07-30 17:13:27Z" end-time="2020-07-30 17:13:28Z" duration="0.198057" asserts="0">
              <properties />
            </test-case>
            <test-case id="2540" name="SyncListUintTest" fullname="Mirror.Tests.SyncListTest.SyncListUintTest" methodname="SyncListUintTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="657757673" result="Passed" start-time="2020-07-30 17:13:28Z" end-time="2020-07-30 17:13:28Z" duration="0.199723" asserts="0">
              <properties />
            </test-case>
            <test-case id="2521" name="TestAdd" fullname="Mirror.Tests.SyncListTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2094988342" result="Passed" start-time="2020-07-30 17:13:28Z" end-time="2020-07-30 17:13:28Z" duration="0.197662" asserts="0">
              <properties />
            </test-case>
            <test-case id="2522" name="TestAddRange" fullname="Mirror.Tests.SyncListTest.TestAddRange" methodname="TestAddRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1912778359" result="Passed" start-time="2020-07-30 17:13:28Z" end-time="2020-07-30 17:13:28Z" duration="0.199434" asserts="0">
              <properties />
            </test-case>
            <test-case id="2523" name="TestClear" fullname="Mirror.Tests.SyncListTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="535015538" result="Passed" start-time="2020-07-30 17:13:28Z" end-time="2020-07-30 17:13:28Z" duration="0.198375" asserts="0">
              <properties />
            </test-case>
            <test-case id="2533" name="TestFind" fullname="Mirror.Tests.SyncListTest.TestFind" methodname="TestFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="567524355" result="Passed" start-time="2020-07-30 17:13:28Z" end-time="2020-07-30 17:13:29Z" duration="0.198526" asserts="0">
              <properties />
            </test-case>
            <test-case id="2535" name="TestFindAll" fullname="Mirror.Tests.SyncListTest.TestFindAll" methodname="TestFindAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="157687687" result="Passed" start-time="2020-07-30 17:13:29Z" end-time="2020-07-30 17:13:29Z" duration="0.198532" asserts="0">
              <properties />
            </test-case>
            <test-case id="2536" name="TestFindAllNonExistent" fullname="Mirror.Tests.SyncListTest.TestFindAllNonExistent" methodname="TestFindAllNonExistent" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="253923876" result="Passed" start-time="2020-07-30 17:13:29Z" end-time="2020-07-30 17:13:29Z" duration="0.198659" asserts="0">
              <properties />
            </test-case>
            <test-case id="2532" name="TestFindIndex" fullname="Mirror.Tests.SyncListTest.TestFindIndex" methodname="TestFindIndex" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1003631362" result="Passed" start-time="2020-07-30 17:13:29Z" end-time="2020-07-30 17:13:29Z" duration="0.198529" asserts="0">
              <properties />
            </test-case>
            <test-case id="2520" name="TestInit" fullname="Mirror.Tests.SyncListTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1419531211" result="Passed" start-time="2020-07-30 17:13:29Z" end-time="2020-07-30 17:13:29Z" duration="0.198460" asserts="0">
              <properties />
            </test-case>
            <test-case id="2524" name="TestInsert" fullname="Mirror.Tests.SyncListTest.TestInsert" methodname="TestInsert" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="418609594" result="Passed" start-time="2020-07-30 17:13:29Z" end-time="2020-07-30 17:13:30Z" duration="0.198000" asserts="0">
              <properties />
            </test-case>
            <test-case id="2525" name="TestInsertRange" fullname="Mirror.Tests.SyncListTest.TestInsertRange" methodname="TestInsertRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1982223027" result="Passed" start-time="2020-07-30 17:13:30Z" end-time="2020-07-30 17:13:30Z" duration="0.198536" asserts="0">
              <properties />
            </test-case>
            <test-case id="2537" name="TestMultSync" fullname="Mirror.Tests.SyncListTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1006435907" result="Passed" start-time="2020-07-30 17:13:30Z" end-time="2020-07-30 17:13:30Z" duration="0.199202" asserts="0">
              <properties />
            </test-case>
            <test-case id="2534" name="TestNoFind" fullname="Mirror.Tests.SyncListTest.TestNoFind" methodname="TestNoFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1752236167" result="Passed" start-time="2020-07-30 17:13:30Z" end-time="2020-07-30 17:13:30Z" duration="0.198724" asserts="0">
              <properties />
            </test-case>
            <test-case id="2531" name="TestRemove" fullname="Mirror.Tests.SyncListTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1563511536" result="Passed" start-time="2020-07-30 17:13:30Z" end-time="2020-07-30 17:13:30Z" duration="0.198404" asserts="0">
              <properties />
            </test-case>
            <test-case id="2528" name="TestRemoveAll" fullname="Mirror.Tests.SyncListTest.TestRemoveAll" methodname="TestRemoveAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="930484002" result="Passed" start-time="2020-07-30 17:13:30Z" end-time="2020-07-30 17:13:31Z" duration="0.197952" asserts="0">
              <properties />
            </test-case>
            <test-case id="2529" name="TestRemoveAllNone" fullname="Mirror.Tests.SyncListTest.TestRemoveAllNone" methodname="TestRemoveAllNone" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1945389342" result="Passed" start-time="2020-07-30 17:13:31Z" end-time="2020-07-30 17:13:31Z" duration="0.198530" asserts="0">
              <properties />
            </test-case>
            <test-case id="2530" name="TestRemoveAt" fullname="Mirror.Tests.SyncListTest.TestRemoveAt" methodname="TestRemoveAt" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1374388486" result="Passed" start-time="2020-07-30 17:13:31Z" end-time="2020-07-30 17:13:31Z" duration="0.198663" asserts="0">
              <properties />
            </test-case>
            <test-case id="2526" name="TestSet" fullname="Mirror.Tests.SyncListTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="291091411" result="Passed" start-time="2020-07-30 17:13:31Z" end-time="2020-07-30 17:13:31Z" duration="0.199656" asserts="0">
              <properties />
            </test-case>
            <test-case id="2527" name="TestSetNull" fullname="Mirror.Tests.SyncListTest.TestSetNull" methodname="TestSetNull" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="237321942" result="Passed" start-time="2020-07-30 17:13:31Z" end-time="2020-07-30 17:13:31Z" duration="0.197957" asserts="0">
              <properties />
            </test-case>
            <test-case id="2547" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncListTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="728521934" result="Passed" start-time="2020-07-30 17:13:31Z" end-time="2020-07-30 17:13:32Z" duration="0.198259" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2553" name="SyncSetTest" fullname="Mirror.Tests.SyncSetTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" testcasecount="30" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:38Z" duration="6.083733" total="30" passed="30" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2560" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncSetTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="627454910" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:32Z" duration="0.199143" asserts="0">
              <properties />
            </test-case>
            <test-case id="2559" name="CallbackTest" fullname="Mirror.Tests.SyncSetTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1488831285" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:32Z" duration="0.198165" asserts="0">
              <properties />
            </test-case>
            <test-case id="2561" name="CountTest" fullname="Mirror.Tests.SyncSetTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1845616303" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:32Z" duration="0.199984" asserts="0">
              <properties />
            </test-case>
            <test-case id="2580" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncSetTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="459355036" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:32Z" duration="0.198253" asserts="0">
              <properties />
            </test-case>
            <test-case id="2578" name="ReadOnlyTest" fullname="Mirror.Tests.SyncSetTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1412206279" result="Passed" start-time="2020-07-30 17:13:32Z" end-time="2020-07-30 17:13:33Z" duration="0.197663" asserts="0">
              <properties />
            </test-case>
            <test-case id="2582" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1696492985" result="Passed" start-time="2020-07-30 17:13:33Z" end-time="2020-07-30 17:13:33Z" duration="0.199330" asserts="0">
              <properties />
            </test-case>
            <test-case id="2583" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1368379134" result="Passed" start-time="2020-07-30 17:13:33Z" end-time="2020-07-30 17:13:33Z" duration="0.197780" asserts="0">
              <properties />
            </test-case>
            <test-case id="2581" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncSetTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="364710194" result="Passed" start-time="2020-07-30 17:13:33Z" end-time="2020-07-30 17:13:33Z" duration="0.198042" asserts="0">
              <properties />
            </test-case>
            <test-case id="2555" name="TestAdd" fullname="Mirror.Tests.SyncSetTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1724209357" result="Passed" start-time="2020-07-30 17:13:33Z" end-time="2020-07-30 17:13:33Z" duration="0.199189" asserts="0">
              <properties />
            </test-case>
            <test-case id="2556" name="TestClear" fullname="Mirror.Tests.SyncSetTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1253240641" result="Passed" start-time="2020-07-30 17:13:33Z" end-time="2020-07-30 17:13:34Z" duration="0.198302" asserts="0">
              <properties />
            </test-case>
            <test-case id="2562" name="TestExceptWith" fullname="Mirror.Tests.SyncSetTest.TestExceptWith" methodname="TestExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1152986135" result="Passed" start-time="2020-07-30 17:13:34Z" end-time="2020-07-30 17:13:34Z" duration="0.199053" asserts="0">
              <properties />
            </test-case>
            <test-case id="2563" name="TestExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestExceptWithSelf" methodname="TestExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1988284671" result="Passed" start-time="2020-07-30 17:13:34Z" end-time="2020-07-30 17:13:34Z" duration="0.198116" asserts="0">
              <properties />
            </test-case>
            <test-case id="2554" name="TestInit" fullname="Mirror.Tests.SyncSetTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="590059161" result="Passed" start-time="2020-07-30 17:13:34Z" end-time="2020-07-30 17:13:34Z" duration="0.198897" asserts="0">
              <properties />
            </test-case>
            <test-case id="2564" name="TestIntersectWith" fullname="Mirror.Tests.SyncSetTest.TestIntersectWith" methodname="TestIntersectWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="815367635" result="Passed" start-time="2020-07-30 17:13:34Z" end-time="2020-07-30 17:13:34Z" duration="0.198187" asserts="0">
              <properties />
            </test-case>
            <test-case id="2565" name="TestIntersectWithSet" fullname="Mirror.Tests.SyncSetTest.TestIntersectWithSet" methodname="TestIntersectWithSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1671254127" result="Passed" start-time="2020-07-30 17:13:34Z" end-time="2020-07-30 17:13:35Z" duration="0.197942" asserts="0">
              <properties />
            </test-case>
            <test-case id="2568" name="TestIsNotProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsNotProperSubsetOf" methodname="TestIsNotProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1687048109" result="Passed" start-time="2020-07-30 17:13:35Z" end-time="2020-07-30 17:13:35Z" duration="0.198862" asserts="0">
              <properties />
            </test-case>
            <test-case id="2566" name="TestIsProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOf" methodname="TestIsProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="297042717" result="Passed" start-time="2020-07-30 17:13:35Z" end-time="2020-07-30 17:13:35Z" duration="0.197963" asserts="0">
              <properties />
            </test-case>
            <test-case id="2567" name="TestIsProperSubsetOfSet" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOfSet" methodname="TestIsProperSubsetOfSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2049517657" result="Passed" start-time="2020-07-30 17:13:35Z" end-time="2020-07-30 17:13:35Z" duration="0.199000" asserts="0">
              <properties />
            </test-case>
            <test-case id="2569" name="TestIsProperSuperSetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSuperSetOf" methodname="TestIsProperSuperSetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1962396287" result="Passed" start-time="2020-07-30 17:13:35Z" end-time="2020-07-30 17:13:35Z" duration="0.199248" asserts="0">
              <properties />
            </test-case>
            <test-case id="2570" name="TestIsSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSubsetOf" methodname="TestIsSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="536342926" result="Passed" start-time="2020-07-30 17:13:35Z" end-time="2020-07-30 17:13:36Z" duration="0.198237" asserts="0">
              <properties />
            </test-case>
            <test-case id="2571" name="TestIsSupersetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSupersetOf" methodname="TestIsSupersetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="871375261" result="Passed" start-time="2020-07-30 17:13:36Z" end-time="2020-07-30 17:13:36Z" duration="0.198588" asserts="0">
              <properties />
            </test-case>
            <test-case id="2558" name="TestMultSync" fullname="Mirror.Tests.SyncSetTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1072423635" result="Passed" start-time="2020-07-30 17:13:36Z" end-time="2020-07-30 17:13:36Z" duration="0.199040" asserts="0">
              <properties />
            </test-case>
            <test-case id="2572" name="TestOverlaps" fullname="Mirror.Tests.SyncSetTest.TestOverlaps" methodname="TestOverlaps" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1043244652" result="Passed" start-time="2020-07-30 17:13:36Z" end-time="2020-07-30 17:13:36Z" duration="0.198065" asserts="0">
              <properties />
            </test-case>
            <test-case id="2557" name="TestRemove" fullname="Mirror.Tests.SyncSetTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="322211968" result="Passed" start-time="2020-07-30 17:13:36Z" end-time="2020-07-30 17:13:36Z" duration="0.198379" asserts="0">
              <properties />
            </test-case>
            <test-case id="2573" name="TestSetEquals" fullname="Mirror.Tests.SyncSetTest.TestSetEquals" methodname="TestSetEquals" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="837386514" result="Passed" start-time="2020-07-30 17:13:36Z" end-time="2020-07-30 17:13:37Z" duration="0.198314" asserts="0">
              <properties />
            </test-case>
            <test-case id="2574" name="TestSymmetricExceptWith" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWith" methodname="TestSymmetricExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1973836477" result="Passed" start-time="2020-07-30 17:13:37Z" end-time="2020-07-30 17:13:37Z" duration="0.199254" asserts="0">
              <properties />
            </test-case>
            <test-case id="2575" name="TestSymmetricExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWithSelf" methodname="TestSymmetricExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="13094340" result="Passed" start-time="2020-07-30 17:13:37Z" end-time="2020-07-30 17:13:37Z" duration="0.198389" asserts="0">
              <properties />
            </test-case>
            <test-case id="2576" name="TestUnionWith" fullname="Mirror.Tests.SyncSetTest.TestUnionWith" methodname="TestUnionWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="637619251" result="Passed" start-time="2020-07-30 17:13:37Z" end-time="2020-07-30 17:13:37Z" duration="0.198338" asserts="0">
              <properties />
            </test-case>
            <test-case id="2577" name="TestUnionWithSelf" fullname="Mirror.Tests.SyncSetTest.TestUnionWithSelf" methodname="TestUnionWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2110319785" result="Passed" start-time="2020-07-30 17:13:37Z" end-time="2020-07-30 17:13:37Z" duration="0.199136" asserts="0">
              <properties />
            </test-case>
            <test-case id="2579" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncSetTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1350508869" result="Passed" start-time="2020-07-30 17:13:37Z" end-time="2020-07-30 17:13:38Z" duration="0.198351" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2584" name="SyncVarHookTest" fullname="Mirror.Tests.SyncVarHookTest" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:42Z" duration="4.085573" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="ParameterizedMethod" id="2608" name="AbstractHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:38Z" duration="0.499960" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2606" name="AbstractHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(True)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="2023680548" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:38Z" duration="0.200765" asserts="0">
                <properties />
              </test-case>
              <test-case id="2607" name="AbstractHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(False)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1122447505" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:38Z" duration="0.197327" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2596" name="GameObjectHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:39Z" duration="0.500569" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2594" name="GameObjectHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(True)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="540793275" result="Passed" start-time="2020-07-30 17:13:38Z" end-time="2020-07-30 17:13:39Z" duration="0.199271" asserts="0">
                <properties />
              </test-case>
              <test-case id="2595" name="GameObjectHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(False)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="2133102334" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:39Z" duration="0.198103" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2587" name="Hook_CalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:39Z" duration="0.493234" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2585" name="Hook_CalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(True)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="631778229" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:39Z" duration="0.200734" asserts="0">
                <properties />
              </test-case>
              <test-case id="2586" name="Hook_CalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(False)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1019251749" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:39Z" duration="0.197798" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2590" name="Hook_NotCalledWhenSyncingSameValue" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:40Z" duration="0.496967" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2588" name="Hook_NotCalledWhenSyncingSameValue(True)" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(True)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1635276726" result="Passed" start-time="2020-07-30 17:13:39Z" end-time="2020-07-30 17:13:40Z" duration="0.199702" asserts="0">
                <properties />
              </test-case>
              <test-case id="2589" name="Hook_NotCalledWhenSyncingSameValue(False)" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(False)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="821463413" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:40Z" duration="0.198217" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2599" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:40Z" duration="0.498308" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2597" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1018764528" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:40Z" duration="0.199034" asserts="0">
                <properties />
              </test-case>
              <test-case id="2598" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1256278501" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:40Z" duration="0.198064" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2593" name="StaticMethod_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:41Z" duration="0.498638" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2591" name="StaticMethod_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(True)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1685840185" result="Passed" start-time="2020-07-30 17:13:40Z" end-time="2020-07-30 17:13:41Z" duration="0.199669" asserts="0">
                <properties />
              </test-case>
              <test-case id="2592" name="StaticMethod_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(False)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="111523367" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:41Z" duration="0.200022" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2602" name="VirtualHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:41Z" duration="0.496762" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2600" name="VirtualHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="145470210" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:41Z" duration="0.200633" asserts="0">
                <properties />
              </test-case>
              <test-case id="2601" name="VirtualHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1458143693" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:41Z" duration="0.198105" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2605" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:42Z" duration="0.496240" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2603" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="167201033" result="Passed" start-time="2020-07-30 17:13:41Z" end-time="2020-07-30 17:13:42Z" duration="0.199831" asserts="0">
                <properties />
              </test-case>
              <test-case id="2604" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1021238182" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.198633" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2609" name="SyncVarTest" fullname="Mirror.Tests.SyncVarTest" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.094058" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2610" name="TestSettingStruct" fullname="Mirror.Tests.SyncVarTest.TestSettingStruct" methodname="TestSettingStruct" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="332755579" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.003510" asserts="0">
              <properties />
            </test-case>
            <test-case id="2613" name="TestSynchronizingObjects" fullname="Mirror.Tests.SyncVarTest.TestSynchronizingObjects" methodname="TestSynchronizingObjects" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="44209971" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.001828" asserts="0">
              <properties />
            </test-case>
            <test-case id="2612" name="TestSyncIntervalAndClearAllComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearAllComponents" methodname="TestSyncIntervalAndClearAllComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="61851619" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.000930" asserts="0">
              <properties />
            </test-case>
            <test-case id="2611" name="TestSyncIntervalAndClearDirtyComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearDirtyComponents" methodname="TestSyncIntervalAndClearDirtyComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1144244264" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.000840" asserts="0">
              <properties />
            </test-case>
            <test-case id="2614" name="TestSyncModeObserversMask" fullname="Mirror.Tests.SyncVarTest.TestSyncModeObserversMask" methodname="TestSyncModeObserversMask" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1572892005" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:42Z" duration="0.000856" asserts="0">
              <properties />
            </test-case>
          </test-suite>
        </test-suite>
        <test-suite type="TestSuite" id="2805" name="Weaver" fullname="Mirror.Weaver" runstate="Runnable" testcasecount="177" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:16:09Z" duration="146.487389" total="177" passed="177" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="2806" name="Tests" fullname="Mirror.Weaver.Tests" runstate="Runnable" testcasecount="177" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:16:09Z" duration="146.304934" total="177" passed="177" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="1942" name="WeaverClientRpcTests" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" testcasecount="7" result="Passed" start-time="2020-07-30 17:13:42Z" end-time="2020-07-30 17:13:48Z" duration="6.001503" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1947" name="AbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.AbstractClientRpc" methodname="AbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="43680629" result="Passed" start-time="2020-07-30 17:13:43Z" end-time="2020-07-30 17:13:44Z" duration="0.858675" asserts="0">
                <properties />
              </test-case>
              <test-case id="1944" name="ClientRpcCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcCantBeStatic" methodname="ClientRpcCantBeStatic" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1629563201" result="Passed" start-time="2020-07-30 17:13:44Z" end-time="2020-07-30 17:13:44Z" duration="0.798521" asserts="0">
                <properties />
              </test-case>
              <test-case id="1949" name="ClientRpcThatExcludesOwner" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcThatExcludesOwner" methodname="ClientRpcThatExcludesOwner" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="41153715" result="Passed" start-time="2020-07-30 17:13:44Z" end-time="2020-07-30 17:13:45Z" duration="0.899253" asserts="0">
                <properties />
              </test-case>
              <test-case id="1943" name="ClientRpcValid" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcValid" methodname="ClientRpcValid" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="625942850" result="Passed" start-time="2020-07-30 17:13:45Z" end-time="2020-07-30 17:13:46Z" duration="0.798667" asserts="0">
                <properties />
              </test-case>
              <test-case id="1948" name="OverrideAbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideAbstractClientRpc" methodname="OverrideAbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="2130892697" result="Passed" start-time="2020-07-30 17:13:46Z" end-time="2020-07-30 17:13:47Z" duration="0.698655" asserts="0">
                <properties />
              </test-case>
              <test-case id="1946" name="OverrideVirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideVirtualClientRpc" methodname="OverrideVirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="325514120" result="Passed" start-time="2020-07-30 17:13:47Z" end-time="2020-07-30 17:13:48Z" duration="0.797477" asserts="0">
                <properties />
              </test-case>
              <test-case id="1945" name="VirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.VirtualClientRpc" methodname="VirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="143984977" result="Passed" start-time="2020-07-30 17:13:48Z" end-time="2020-07-30 17:13:48Z" duration="0.798795" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1950" name="WeaverClientServerAttributeTests" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:13:48Z" end-time="2020-07-30 17:13:50Z" duration="1.894309" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1952" name="NetworkBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourClient" methodname="NetworkBehaviourClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="2005829628" result="Passed" start-time="2020-07-30 17:13:49Z" end-time="2020-07-30 17:13:50Z" duration="0.782776" asserts="0">
                <properties />
              </test-case>
              <test-case id="1951" name="NetworkBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourServer" methodname="NetworkBehaviourServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1434044620" result="Passed" start-time="2020-07-30 17:13:50Z" end-time="2020-07-30 17:13:50Z" duration="0.797598" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1953" name="WeaverCommandTests" fullname="Mirror.Weaver.Tests.WeaverCommandTests" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" testcasecount="15" result="Passed" start-time="2020-07-30 17:13:50Z" end-time="2020-07-30 17:14:02Z" duration="12.097895" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1967" name="AbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.AbstractCommand" methodname="AbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1128604079" result="Passed" start-time="2020-07-30 17:13:51Z" end-time="2020-07-30 17:13:51Z" duration="0.786436" asserts="0">
                <properties />
              </test-case>
              <test-case id="1955" name="CommandCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandCantBeStatic" methodname="CommandCantBeStatic" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1247810309" result="Passed" start-time="2020-07-30 17:13:51Z" end-time="2020-07-30 17:13:52Z" duration="0.798055" asserts="0">
                <properties />
              </test-case>
              <test-case id="1956" name="CommandThatIgnoresAuthority" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthority" methodname="CommandThatIgnoresAuthority" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="10109667" result="Passed" start-time="2020-07-30 17:13:52Z" end-time="2020-07-30 17:13:53Z" duration="0.698188" asserts="0">
                <properties />
              </test-case>
              <test-case id="1958" name="CommandThatIgnoresAuthorityWithSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthorityWithSenderConnection" methodname="CommandThatIgnoresAuthorityWithSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1896578949" result="Passed" start-time="2020-07-30 17:13:53Z" end-time="2020-07-30 17:13:54Z" duration="0.797872" asserts="0">
                <properties />
              </test-case>
              <test-case id="1954" name="CommandValid" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandValid" methodname="CommandValid" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="61951340" result="Passed" start-time="2020-07-30 17:13:54Z" end-time="2020-07-30 17:13:55Z" duration="0.798237" asserts="0">
                <properties />
              </test-case>
              <test-case id="1957" name="CommandWithArguments" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithArguments" methodname="CommandWithArguments" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="334031760" result="Passed" start-time="2020-07-30 17:13:55Z" end-time="2020-07-30 17:13:55Z" duration="0.799374" asserts="0">
                <properties />
              </test-case>
              <test-case id="1959" name="CommandWithSenderConnectionAndOtherArgs" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithSenderConnectionAndOtherArgs" methodname="CommandWithSenderConnectionAndOtherArgs" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="639426702" result="Passed" start-time="2020-07-30 17:13:55Z" end-time="2020-07-30 17:13:56Z" duration="0.799045" asserts="0">
                <properties />
              </test-case>
              <test-case id="1961" name="ErrorForNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1362020149" result="Passed" start-time="2020-07-30 17:13:56Z" end-time="2020-07-30 17:13:57Z" duration="0.798487" asserts="0">
                <properties />
              </test-case>
              <test-case id="1960" name="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="210671974" result="Passed" start-time="2020-07-30 17:13:57Z" end-time="2020-07-30 17:13:58Z" duration="0.799248" asserts="0">
                <properties />
              </test-case>
              <test-case id="1968" name="OverrideAbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideAbstractCommand" methodname="OverrideAbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1824655751" result="Passed" start-time="2020-07-30 17:13:58Z" end-time="2020-07-30 17:13:58Z" duration="0.697176" asserts="0">
                <properties />
              </test-case>
              <test-case id="1964" name="OverrideVirtualCallBaseCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallBaseCommand" methodname="OverrideVirtualCallBaseCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="63236225" result="Passed" start-time="2020-07-30 17:13:58Z" end-time="2020-07-30 17:13:59Z" duration="0.798679" asserts="0">
                <properties />
              </test-case>
              <test-case id="1965" name="OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" methodname="OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1991406327" result="Passed" start-time="2020-07-30 17:13:59Z" end-time="2020-07-30 17:14:00Z" duration="0.799045" asserts="0">
                <properties />
              </test-case>
              <test-case id="1966" name="OverrideVirtualCallsBaseCommandWithOverride" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallsBaseCommandWithOverride" methodname="OverrideVirtualCallsBaseCommandWithOverride" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1311294503" result="Passed" start-time="2020-07-30 17:14:00Z" end-time="2020-07-30 17:14:01Z" duration="0.797209" asserts="0">
                <properties />
              </test-case>
              <test-case id="1963" name="OverrideVirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCommand" methodname="OverrideVirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="728084917" result="Passed" start-time="2020-07-30 17:14:01Z" end-time="2020-07-30 17:14:02Z" duration="0.799292" asserts="0">
                <properties />
              </test-case>
              <test-case id="1962" name="VirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.VirtualCommand" methodname="VirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="171765794" result="Passed" start-time="2020-07-30 17:14:02Z" end-time="2020-07-30 17:14:02Z" duration="0.798815" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1969" name="WeaverGeneralTests" fullname="Mirror.Weaver.Tests.WeaverGeneralTests" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-07-30 17:14:02Z" end-time="2020-07-30 17:14:04Z" duration="1.890243" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1970" name="RecursionCount" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.RecursionCount" methodname="RecursionCount" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="529846024" result="Passed" start-time="2020-07-30 17:14:03Z" end-time="2020-07-30 17:14:04Z" duration="0.781747" asserts="0">
                <properties />
              </test-case>
              <test-case id="1971" name="TestingScriptableObjectArraySerialization" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.TestingScriptableObjectArraySerialization" methodname="TestingScriptableObjectArraySerialization" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="510389306" result="Passed" start-time="2020-07-30 17:14:04Z" end-time="2020-07-30 17:14:04Z" duration="0.798302" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1972" name="WeaverGeneratedReaderWriterTests" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" testcasecount="19" result="Passed" start-time="2020-07-30 17:14:04Z" end-time="2020-07-30 17:14:22Z" duration="17.596551" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1990" name="CanUseCustomReadWriteForInterfaces" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForInterfaces" methodname="CanUseCustomReadWriteForInterfaces" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1182257107" result="Passed" start-time="2020-07-30 17:14:05Z" end-time="2020-07-30 17:14:06Z" duration="0.880656" asserts="0">
                <properties />
              </test-case>
              <test-case id="1982" name="CanUseCustomReadWriteForTypesFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForTypesFromDifferentAssemblies" methodname="CanUseCustomReadWriteForTypesFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="253139649" result="Passed" start-time="2020-07-30 17:14:06Z" end-time="2020-07-30 17:14:06Z" duration="0.898862" asserts="0">
                <properties />
              </test-case>
              <test-case id="1974" name="CreatesForClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClass" methodname="CreatesForClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1574737372" result="Passed" start-time="2020-07-30 17:14:06Z" end-time="2020-07-30 17:14:07Z" duration="0.897827" asserts="0">
                <properties />
              </test-case>
              <test-case id="1980" name="CreatesForClassFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssemblies" methodname="CreatesForClassFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="846671773" result="Passed" start-time="2020-07-30 17:14:07Z" end-time="2020-07-30 17:14:08Z" duration="0.898748" asserts="0">
                <properties />
              </test-case>
              <test-case id="1981" name="CreatesForClassFromDifferentAssembliesWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssembliesWithValidConstructor" methodname="CreatesForClassFromDifferentAssembliesWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="2022616124" result="Passed" start-time="2020-07-30 17:14:08Z" end-time="2020-07-30 17:14:09Z" duration="0.897794" asserts="0">
                <properties />
              </test-case>
              <test-case id="1975" name="CreatesForClassInherited" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassInherited" methodname="CreatesForClassInherited" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1060269040" result="Passed" start-time="2020-07-30 17:14:09Z" end-time="2020-07-30 17:14:10Z" duration="0.898980" asserts="0">
                <properties />
              </test-case>
              <test-case id="1976" name="CreatesForClassWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassWithValidConstructor" methodname="CreatesForClassWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="361948009" result="Passed" start-time="2020-07-30 17:14:10Z" end-time="2020-07-30 17:14:11Z" duration="0.898297" asserts="0">
                <properties />
              </test-case>
              <test-case id="1991" name="CreatesForEnums" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForEnums" methodname="CreatesForEnums" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1606749965" result="Passed" start-time="2020-07-30 17:14:11Z" end-time="2020-07-30 17:14:12Z" duration="0.898084" asserts="0">
                <properties />
              </test-case>
              <test-case id="1978" name="CreatesForInheritedFromScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForInheritedFromScriptableObject" methodname="CreatesForInheritedFromScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="581692272" result="Passed" start-time="2020-07-30 17:14:12Z" end-time="2020-07-30 17:14:13Z" duration="0.898935" asserts="0">
                <properties />
              </test-case>
              <test-case id="1979" name="CreatesForStructFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructFromDifferentAssemblies" methodname="CreatesForStructFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="332737714" result="Passed" start-time="2020-07-30 17:14:13Z" end-time="2020-07-30 17:14:14Z" duration="0.898235" asserts="0">
                <properties />
              </test-case>
              <test-case id="1973" name="CreatesForStructs" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructs" methodname="CreatesForStructs" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1729794630" result="Passed" start-time="2020-07-30 17:14:14Z" end-time="2020-07-30 17:14:15Z" duration="0.898044" asserts="0">
                <properties />
              </test-case>
              <test-case id="1988" name="ExcludesNonSerializedFields" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.ExcludesNonSerializedFields" methodname="ExcludesNonSerializedFields" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="62033432" result="Passed" start-time="2020-07-30 17:14:15Z" end-time="2020-07-30 17:14:16Z" duration="0.997493" asserts="0">
                <properties />
              </test-case>
              <test-case id="1977" name="GivesErrorForClassWithNoValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForClassWithNoValidConstructor" methodname="GivesErrorForClassWithNoValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="115817553" result="Passed" start-time="2020-07-30 17:14:16Z" end-time="2020-07-30 17:14:17Z" duration="0.999249" asserts="0">
                <properties />
              </test-case>
              <test-case id="1989" name="GivesErrorWhenUsingInterface" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingInterface" methodname="GivesErrorWhenUsingInterface" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="624673402" result="Passed" start-time="2020-07-30 17:14:17Z" end-time="2020-07-30 17:14:17Z" duration="0.898480" asserts="0">
                <properties />
              </test-case>
              <test-case id="1986" name="GivesErrorWhenUsingMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingMonoBehaviour" methodname="GivesErrorWhenUsingMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1526508768" result="Passed" start-time="2020-07-30 17:14:17Z" end-time="2020-07-30 17:14:18Z" duration="0.898750" asserts="0">
                <properties />
              </test-case>
              <test-case id="1984" name="GivesErrorWhenUsingObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingObject" methodname="GivesErrorWhenUsingObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="894260706" result="Passed" start-time="2020-07-30 17:14:18Z" end-time="2020-07-30 17:14:19Z" duration="0.898534" asserts="0">
                <properties />
              </test-case>
              <test-case id="1985" name="GivesErrorWhenUsingScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingScriptableObject" methodname="GivesErrorWhenUsingScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1450045487" result="Passed" start-time="2020-07-30 17:14:19Z" end-time="2020-07-30 17:14:20Z" duration="0.899082" asserts="0">
                <properties />
              </test-case>
              <test-case id="1987" name="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" methodname="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1910939295" result="Passed" start-time="2020-07-30 17:14:20Z" end-time="2020-07-30 17:14:21Z" duration="0.897131" asserts="0">
                <properties />
              </test-case>
              <test-case id="1983" name="GivesErrorWhenUsingUnityAsset" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingUnityAsset" methodname="GivesErrorWhenUsingUnityAsset" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="440107505" result="Passed" start-time="2020-07-30 17:14:21Z" end-time="2020-07-30 17:14:22Z" duration="0.898189" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1992" name="WeaverMessageTests" fullname="Mirror.Weaver.Tests.WeaverMessageTests" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-07-30 17:14:22Z" end-time="2020-07-30 17:14:26Z" duration="4.184385" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1996" name="MessageMemberGeneric" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberGeneric" methodname="MessageMemberGeneric" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="781152393" result="Passed" start-time="2020-07-30 17:14:22Z" end-time="2020-07-30 17:14:23Z" duration="0.767799" asserts="0">
                <properties />
              </test-case>
              <test-case id="1997" name="MessageMemberInterface" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberInterface" methodname="MessageMemberInterface" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="691242331" result="Passed" start-time="2020-07-30 17:14:23Z" end-time="2020-07-30 17:14:24Z" duration="0.797814" asserts="0">
                <properties />
              </test-case>
              <test-case id="1995" name="MessageSelfReferencing" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageSelfReferencing" methodname="MessageSelfReferencing" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1481436050" result="Passed" start-time="2020-07-30 17:14:24Z" end-time="2020-07-30 17:14:25Z" duration="0.797139" asserts="0">
                <properties />
              </test-case>
              <test-case id="1993" name="MessageValid" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageValid" methodname="MessageValid" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1111716794" result="Passed" start-time="2020-07-30 17:14:25Z" end-time="2020-07-30 17:14:25Z" duration="0.700135" asserts="0">
                <properties />
              </test-case>
              <test-case id="1994" name="MessageWithBaseClass" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageWithBaseClass" methodname="MessageWithBaseClass" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="219241290" result="Passed" start-time="2020-07-30 17:14:25Z" end-time="2020-07-30 17:14:26Z" duration="0.797755" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1998" name="WeaverMonoBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2020-07-30 17:14:26Z" end-time="2020-07-30 17:14:34Z" duration="7.796747" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2007" name="MonoBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClient" methodname="MonoBehaviourClient" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="330590607" result="Passed" start-time="2020-07-30 17:14:26Z" end-time="2020-07-30 17:14:27Z" duration="0.684367" asserts="0">
                <properties />
              </test-case>
              <test-case id="2008" name="MonoBehaviourClientCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientCallback" methodname="MonoBehaviourClientCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="948298086" result="Passed" start-time="2020-07-30 17:14:27Z" end-time="2020-07-30 17:14:28Z" duration="0.797844" asserts="0">
                <properties />
              </test-case>
              <test-case id="2003" name="MonoBehaviourClientRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientRpc" methodname="MonoBehaviourClientRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1507159482" result="Passed" start-time="2020-07-30 17:14:28Z" end-time="2020-07-30 17:14:29Z" duration="0.699676" asserts="0">
                <properties />
              </test-case>
              <test-case id="2002" name="MonoBehaviourCommand" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourCommand" methodname="MonoBehaviourCommand" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="798138442" result="Passed" start-time="2020-07-30 17:14:29Z" end-time="2020-07-30 17:14:29Z" duration="0.698546" asserts="0">
                <properties />
              </test-case>
              <test-case id="2005" name="MonoBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServer" methodname="MonoBehaviourServer" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1506855221" result="Passed" start-time="2020-07-30 17:14:29Z" end-time="2020-07-30 17:14:30Z" duration="0.798564" asserts="0">
                <properties />
              </test-case>
              <test-case id="2006" name="MonoBehaviourServerCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServerCallback" methodname="MonoBehaviourServerCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="423926022" result="Passed" start-time="2020-07-30 17:14:30Z" end-time="2020-07-30 17:14:31Z" duration="0.797757" asserts="0">
                <properties />
              </test-case>
              <test-case id="2001" name="MonoBehaviourSyncList" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncList" methodname="MonoBehaviourSyncList" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1528661972" result="Passed" start-time="2020-07-30 17:14:31Z" end-time="2020-07-30 17:14:32Z" duration="0.698006" asserts="0">
                <properties />
              </test-case>
              <test-case id="2000" name="MonoBehaviourSyncVar" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncVar" methodname="MonoBehaviourSyncVar" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1255781043" result="Passed" start-time="2020-07-30 17:14:32Z" end-time="2020-07-30 17:14:32Z" duration="0.798860" asserts="0">
                <properties />
              </test-case>
              <test-case id="2004" name="MonoBehaviourTargetRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourTargetRpc" methodname="MonoBehaviourTargetRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="19226" result="Passed" start-time="2020-07-30 17:14:32Z" end-time="2020-07-30 17:14:33Z" duration="0.698862" asserts="0">
                <properties />
              </test-case>
              <test-case id="1999" name="MonoBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourValid" methodname="MonoBehaviourValid" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1424563292" result="Passed" start-time="2020-07-30 17:14:33Z" end-time="2020-07-30 17:14:34Z" duration="0.798453" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2009" name="WeaverNetworkBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" testcasecount="33" result="Passed" start-time="2020-07-30 17:14:34Z" end-time="2020-07-30 17:15:00Z" duration="25.991206" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2011" name="NetworkBehaviourAbstractBaseValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourAbstractBaseValid" methodname="NetworkBehaviourAbstractBaseValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1748389648" result="Passed" start-time="2020-07-30 17:14:34Z" end-time="2020-07-30 17:14:35Z" duration="0.782551" asserts="0">
                <properties />
              </test-case>
              <test-case id="2027" name="NetworkBehaviourClientRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcCoroutine" methodname="NetworkBehaviourClientRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1014251980" result="Passed" start-time="2020-07-30 17:14:35Z" end-time="2020-07-30 17:14:36Z" duration="0.898844" asserts="0">
                <properties />
              </test-case>
              <test-case id="2035" name="NetworkBehaviourClientRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcDuplicateName" methodname="NetworkBehaviourClientRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="978559049" result="Passed" start-time="2020-07-30 17:14:36Z" end-time="2020-07-30 17:14:37Z" duration="0.798005" asserts="0">
                <properties />
              </test-case>
              <test-case id="2026" name="NetworkBehaviourClientRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcGenericParam" methodname="NetworkBehaviourClientRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1814084148" result="Passed" start-time="2020-07-30 17:14:37Z" end-time="2020-07-30 17:14:37Z" duration="0.697948" asserts="0">
                <properties />
              </test-case>
              <test-case id="2032" name="NetworkBehaviourClientRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract" methodname="NetworkBehaviourClientRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="538627825" result="Passed" start-time="2020-07-30 17:14:37Z" end-time="2020-07-30 17:14:38Z" duration="0.797616" asserts="0">
                <properties />
              </test-case>
              <test-case id="2033" name="NetworkBehaviourClientRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent" methodname="NetworkBehaviourClientRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1859967611" result="Passed" start-time="2020-07-30 17:14:38Z" end-time="2020-07-30 17:14:39Z" duration="0.697878" asserts="0">
                <properties />
              </test-case>
              <test-case id="2034" name="NetworkBehaviourClientRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamNetworkConnection" methodname="NetworkBehaviourClientRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="438575706" result="Passed" start-time="2020-07-30 17:14:39Z" end-time="2020-07-30 17:14:40Z" duration="0.798476" asserts="0">
                <properties />
              </test-case>
              <test-case id="2030" name="NetworkBehaviourClientRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOptional" methodname="NetworkBehaviourClientRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1201148519" result="Passed" start-time="2020-07-30 17:14:40Z" end-time="2020-07-30 17:14:41Z" duration="0.798103" asserts="0">
                <properties />
              </test-case>
              <test-case id="2029" name="NetworkBehaviourClientRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOut" methodname="NetworkBehaviourClientRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="204821080" result="Passed" start-time="2020-07-30 17:14:41Z" end-time="2020-07-30 17:14:41Z" duration="0.798088" asserts="0">
                <properties />
              </test-case>
              <test-case id="2031" name="NetworkBehaviourClientRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamRef" methodname="NetworkBehaviourClientRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="778095920" result="Passed" start-time="2020-07-30 17:14:41Z" end-time="2020-07-30 17:14:42Z" duration="0.698186" asserts="0">
                <properties />
              </test-case>
              <test-case id="2028" name="NetworkBehaviourClientRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcVoidReturn" methodname="NetworkBehaviourClientRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="403767647" result="Passed" start-time="2020-07-30 17:14:42Z" end-time="2020-07-30 17:14:43Z" duration="0.698880" asserts="0">
                <properties />
              </test-case>
              <test-case id="2014" name="NetworkBehaviourCmdCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdCoroutine" methodname="NetworkBehaviourCmdCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="414642905" result="Passed" start-time="2020-07-30 17:14:43Z" end-time="2020-07-30 17:14:44Z" duration="0.797973" asserts="0">
                <properties />
              </test-case>
              <test-case id="2042" name="NetworkBehaviourCmdDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdDuplicateName" methodname="NetworkBehaviourCmdDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1404115336" result="Passed" start-time="2020-07-30 17:14:44Z" end-time="2020-07-30 17:14:44Z" duration="0.797177" asserts="0">
                <properties />
              </test-case>
              <test-case id="2013" name="NetworkBehaviourCmdGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdGenericParam" methodname="NetworkBehaviourCmdGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2015715622" result="Passed" start-time="2020-07-30 17:14:44Z" end-time="2020-07-30 17:14:45Z" duration="0.697759" asserts="0">
                <properties />
              </test-case>
              <test-case id="2039" name="NetworkBehaviourCmdParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract" methodname="NetworkBehaviourCmdParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="586661044" result="Passed" start-time="2020-07-30 17:14:45Z" end-time="2020-07-30 17:14:46Z" duration="0.798907" asserts="0">
                <properties />
              </test-case>
              <test-case id="2040" name="NetworkBehaviourCmdParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent" methodname="NetworkBehaviourCmdParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1287926647" result="Passed" start-time="2020-07-30 17:14:46Z" end-time="2020-07-30 17:14:47Z" duration="0.698926" asserts="0">
                <properties />
              </test-case>
              <test-case id="2041" name="NetworkBehaviourCmdParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamNetworkConnection" methodname="NetworkBehaviourCmdParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="580707364" result="Passed" start-time="2020-07-30 17:14:47Z" end-time="2020-07-30 17:14:47Z" duration="0.797971" asserts="0">
                <properties />
              </test-case>
              <test-case id="2037" name="NetworkBehaviourCmdParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOptional" methodname="NetworkBehaviourCmdParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="777474285" result="Passed" start-time="2020-07-30 17:14:47Z" end-time="2020-07-30 17:14:48Z" duration="0.798354" asserts="0">
                <properties />
              </test-case>
              <test-case id="2036" name="NetworkBehaviourCmdParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOut" methodname="NetworkBehaviourCmdParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="755145777" result="Passed" start-time="2020-07-30 17:14:48Z" end-time="2020-07-30 17:14:49Z" duration="0.797525" asserts="0">
                <properties />
              </test-case>
              <test-case id="2038" name="NetworkBehaviourCmdParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef" methodname="NetworkBehaviourCmdParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="990227812" result="Passed" start-time="2020-07-30 17:14:49Z" end-time="2020-07-30 17:14:50Z" duration="0.797974" asserts="0">
                <properties />
              </test-case>
              <test-case id="2015" name="NetworkBehaviourCmdVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdVoidReturn" methodname="NetworkBehaviourCmdVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="323296532" result="Passed" start-time="2020-07-30 17:14:50Z" end-time="2020-07-30 17:14:51Z" duration="0.798219" asserts="0">
                <properties />
              </test-case>
              <test-case id="2012" name="NetworkBehaviourGeneric" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourGeneric" methodname="NetworkBehaviourGeneric" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1342302326" result="Passed" start-time="2020-07-30 17:14:51Z" end-time="2020-07-30 17:14:51Z" duration="0.799360" asserts="0">
                <properties />
              </test-case>
              <test-case id="2017" name="NetworkBehaviourTargetRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcCoroutine" methodname="NetworkBehaviourTargetRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1012451622" result="Passed" start-time="2020-07-30 17:14:51Z" end-time="2020-07-30 17:14:52Z" duration="0.798086" asserts="0">
                <properties />
              </test-case>
              <test-case id="2025" name="NetworkBehaviourTargetRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcDuplicateName" methodname="NetworkBehaviourTargetRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1392746525" result="Passed" start-time="2020-07-30 17:14:52Z" end-time="2020-07-30 17:14:53Z" duration="0.797484" asserts="0">
                <properties />
              </test-case>
              <test-case id="2016" name="NetworkBehaviourTargetRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcGenericParam" methodname="NetworkBehaviourTargetRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="888075909" result="Passed" start-time="2020-07-30 17:14:53Z" end-time="2020-07-30 17:14:54Z" duration="0.699980" asserts="0">
                <properties />
              </test-case>
              <test-case id="2022" name="NetworkBehaviourTargetRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract" methodname="NetworkBehaviourTargetRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="825037700" result="Passed" start-time="2020-07-30 17:14:54Z" end-time="2020-07-30 17:14:54Z" duration="0.797200" asserts="0">
                <properties />
              </test-case>
              <test-case id="2023" name="NetworkBehaviourTargetRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent" methodname="NetworkBehaviourTargetRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="200112494" result="Passed" start-time="2020-07-30 17:14:54Z" end-time="2020-07-30 17:14:55Z" duration="0.800348" asserts="0">
                <properties />
              </test-case>
              <test-case id="2024" name="NetworkBehaviourTargetRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamNetworkConnection" methodname="NetworkBehaviourTargetRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1767833018" result="Passed" start-time="2020-07-30 17:14:55Z" end-time="2020-07-30 17:14:56Z" duration="0.797115" asserts="0">
                <properties />
              </test-case>
              <test-case id="2020" name="NetworkBehaviourTargetRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOptional" methodname="NetworkBehaviourTargetRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2139959432" result="Passed" start-time="2020-07-30 17:14:56Z" end-time="2020-07-30 17:14:57Z" duration="0.797829" asserts="0">
                <properties />
              </test-case>
              <test-case id="2019" name="NetworkBehaviourTargetRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOut" methodname="NetworkBehaviourTargetRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="337302335" result="Passed" start-time="2020-07-30 17:14:57Z" end-time="2020-07-30 17:14:58Z" duration="0.697858" asserts="0">
                <properties />
              </test-case>
              <test-case id="2021" name="NetworkBehaviourTargetRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef" methodname="NetworkBehaviourTargetRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1402719057" result="Passed" start-time="2020-07-30 17:14:58Z" end-time="2020-07-30 17:14:58Z" duration="0.798621" asserts="0">
                <properties />
              </test-case>
              <test-case id="2018" name="NetworkBehaviourTargetRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcVoidReturn" methodname="NetworkBehaviourTargetRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="412749169" result="Passed" start-time="2020-07-30 17:14:58Z" end-time="2020-07-30 17:14:59Z" duration="0.798709" asserts="0">
                <properties />
              </test-case>
              <test-case id="2010" name="NetworkBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourValid" methodname="NetworkBehaviourValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="425445478" result="Passed" start-time="2020-07-30 17:14:59Z" end-time="2020-07-30 17:15:00Z" duration="0.797552" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2043" name="WeaverSyncDictionaryTests" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" testcasecount="21" result="Passed" start-time="2020-07-30 17:15:00Z" end-time="2020-07-30 17:15:17Z" duration="16.978655" total="21" passed="21" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2044" name="SyncDictionary" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionary" methodname="SyncDictionary" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="266230599" result="Passed" start-time="2020-07-30 17:15:00Z" end-time="2020-07-30 17:15:01Z" duration="0.784964" asserts="0">
                <properties />
              </test-case>
              <test-case id="2057" name="SyncDictionaryErrorForGenericStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem" methodname="SyncDictionaryErrorForGenericStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1579614281" result="Passed" start-time="2020-07-30 17:15:01Z" end-time="2020-07-30 17:15:02Z" duration="0.799719" asserts="0">
                <properties />
              </test-case>
              <test-case id="2059" name="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1193188707" result="Passed" start-time="2020-07-30 17:15:02Z" end-time="2020-07-30 17:15:03Z" duration="0.796935" asserts="0">
                <properties />
              </test-case>
              <test-case id="2061" name="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="223722951" result="Passed" start-time="2020-07-30 17:15:03Z" end-time="2020-07-30 17:15:03Z" duration="0.799059" asserts="0">
                <properties />
              </test-case>
              <test-case id="2056" name="SyncDictionaryErrorForGenericStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey" methodname="SyncDictionaryErrorForGenericStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1392626153" result="Passed" start-time="2020-07-30 17:15:03Z" end-time="2020-07-30 17:15:04Z" duration="0.797673" asserts="0">
                <properties />
              </test-case>
              <test-case id="2058" name="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1252969189" result="Passed" start-time="2020-07-30 17:15:04Z" end-time="2020-07-30 17:15:05Z" duration="0.697781" asserts="0">
                <properties />
              </test-case>
              <test-case id="2060" name="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="868974187" result="Passed" start-time="2020-07-30 17:15:05Z" end-time="2020-07-30 17:15:06Z" duration="0.798622" asserts="0">
                <properties />
              </test-case>
              <test-case id="2064" name="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" methodname="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="921155128" result="Passed" start-time="2020-07-30 17:15:06Z" end-time="2020-07-30 17:15:07Z" duration="0.797557" asserts="0">
                <properties />
              </test-case>
              <test-case id="2045" name="SyncDictionaryGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericAbstractInheritance" methodname="SyncDictionaryGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1513712083" result="Passed" start-time="2020-07-30 17:15:07Z" end-time="2020-07-30 17:15:07Z" duration="0.798640" asserts="0">
                <properties />
              </test-case>
              <test-case id="2046" name="SyncDictionaryGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericInheritance" methodname="SyncDictionaryGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="2135271820" result="Passed" start-time="2020-07-30 17:15:07Z" end-time="2020-07-30 17:15:08Z" duration="0.798045" asserts="0">
                <properties />
              </test-case>
              <test-case id="2063" name="SyncDictionaryGenericStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructItemWithCustomMethods" methodname="SyncDictionaryGenericStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="552067039" result="Passed" start-time="2020-07-30 17:15:08Z" end-time="2020-07-30 17:15:09Z" duration="0.799090" asserts="0">
                <properties />
              </test-case>
              <test-case id="2062" name="SyncDictionaryGenericStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructKeyWithCustomMethods" methodname="SyncDictionaryGenericStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="865470734" result="Passed" start-time="2020-07-30 17:15:09Z" end-time="2020-07-30 17:15:10Z" duration="0.798103" asserts="0">
                <properties />
              </test-case>
              <test-case id="2047" name="SyncDictionaryInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryInheritance" methodname="SyncDictionaryInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="984804144" result="Passed" start-time="2020-07-30 17:15:10Z" end-time="2020-07-30 17:15:11Z" duration="0.797892" asserts="0">
                <properties />
              </test-case>
              <test-case id="2049" name="SyncDictionaryStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItem" methodname="SyncDictionaryStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1983269780" result="Passed" start-time="2020-07-30 17:15:11Z" end-time="2020-07-30 17:15:11Z" duration="0.798362" asserts="0">
                <properties />
              </test-case>
              <test-case id="2051" name="SyncDictionaryStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1511562327" result="Passed" start-time="2020-07-30 17:15:11Z" end-time="2020-07-30 17:15:12Z" duration="0.799124" asserts="0">
                <properties />
              </test-case>
              <test-case id="2053" name="SyncDictionaryStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomMethods" methodname="SyncDictionaryStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1417463888" result="Passed" start-time="2020-07-30 17:15:12Z" end-time="2020-07-30 17:15:13Z" duration="0.798650" asserts="0">
                <properties />
              </test-case>
              <test-case id="2055" name="SyncDictionaryStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomSerializeOnly" methodname="SyncDictionaryStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1329446114" result="Passed" start-time="2020-07-30 17:15:13Z" end-time="2020-07-30 17:15:14Z" duration="0.797707" asserts="0">
                <properties />
              </test-case>
              <test-case id="2048" name="SyncDictionaryStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKey" methodname="SyncDictionaryStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1009270849" result="Passed" start-time="2020-07-30 17:15:14Z" end-time="2020-07-30 17:15:15Z" duration="0.797614" asserts="0">
                <properties />
              </test-case>
              <test-case id="2050" name="SyncDictionaryStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1347463654" result="Passed" start-time="2020-07-30 17:15:15Z" end-time="2020-07-30 17:15:15Z" duration="0.798451" asserts="0">
                <properties />
              </test-case>
              <test-case id="2052" name="SyncDictionaryStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomMethods" methodname="SyncDictionaryStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="2131636510" result="Passed" start-time="2020-07-30 17:15:15Z" end-time="2020-07-30 17:15:16Z" duration="0.798364" asserts="0">
                <properties />
              </test-case>
              <test-case id="2054" name="SyncDictionaryStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1134039259" result="Passed" start-time="2020-07-30 17:15:16Z" end-time="2020-07-30 17:15:17Z" duration="0.798049" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2065" name="WeaverSyncEventTests" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-07-30 17:15:17Z" end-time="2020-07-30 17:15:20Z" duration="2.683458" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2068" name="ErrorWhenSyncEventUsesGenericParameter" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.ErrorWhenSyncEventUsesGenericParameter" methodname="ErrorWhenSyncEventUsesGenericParameter" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="2755526" result="Passed" start-time="2020-07-30 17:15:17Z" end-time="2020-07-30 17:15:18Z" duration="0.786201" asserts="0">
                <properties />
              </test-case>
              <test-case id="2067" name="MultipleSyncEvent" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.MultipleSyncEvent" methodname="MultipleSyncEvent" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="1239420281" result="Passed" start-time="2020-07-30 17:15:18Z" end-time="2020-07-30 17:15:19Z" duration="0.797033" asserts="0">
                <properties />
              </test-case>
              <test-case id="2066" name="SyncEventValid" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.SyncEventValid" methodname="SyncEventValid" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="1410360431" result="Passed" start-time="2020-07-30 17:15:19Z" end-time="2020-07-30 17:15:20Z" duration="0.799205" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2069" name="WeaverSyncListTests" fullname="Mirror.Weaver.Tests.WeaverSyncListTests" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" testcasecount="25" result="Passed" start-time="2020-07-30 17:15:20Z" end-time="2020-07-30 17:15:40Z" duration="20.196150" total="25" passed="25" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2070" name="SyncList" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncList" methodname="SyncList" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1907096753" result="Passed" start-time="2020-07-30 17:15:20Z" end-time="2020-07-30 17:15:21Z" duration="0.785028" asserts="0">
                <properties />
              </test-case>
              <test-case id="2071" name="SyncListByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListByteValid" methodname="SyncListByteValid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="146308819" result="Passed" start-time="2020-07-30 17:15:21Z" end-time="2020-07-30 17:15:22Z" duration="0.798236" asserts="0">
                <properties />
              </test-case>
              <test-case id="2087" name="SyncListErrorForGenericStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStruct" methodname="SyncListErrorForGenericStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1309680059" result="Passed" start-time="2020-07-30 17:15:22Z" end-time="2020-07-30 17:15:22Z" duration="0.798849" asserts="0">
                <properties />
              </test-case>
              <test-case id="2088" name="SyncListErrorForGenericStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomDeserializeOnly" methodname="SyncListErrorForGenericStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="668985766" result="Passed" start-time="2020-07-30 17:15:22Z" end-time="2020-07-30 17:15:23Z" duration="0.798798" asserts="0">
                <properties />
              </test-case>
              <test-case id="2089" name="SyncListErrorForGenericStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomSerializeOnly" methodname="SyncListErrorForGenericStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2064415425" result="Passed" start-time="2020-07-30 17:15:23Z" end-time="2020-07-30 17:15:24Z" duration="0.697622" asserts="0">
                <properties />
              </test-case>
              <test-case id="2091" name="SyncListErrorForInterface" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForInterface" methodname="SyncListErrorForInterface" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1495015641" result="Passed" start-time="2020-07-30 17:15:24Z" end-time="2020-07-30 17:15:25Z" duration="0.798380" asserts="0">
                <properties />
              </test-case>
              <test-case id="2094" name="SyncListErrorWhenUsingGenericListInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorWhenUsingGenericListInNetworkBehaviour" methodname="SyncListErrorWhenUsingGenericListInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="657701162" result="Passed" start-time="2020-07-30 17:15:25Z" end-time="2020-07-30 17:15:25Z" duration="0.798636" asserts="0">
                <properties />
              </test-case>
              <test-case id="2072" name="SyncListGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericAbstractInheritance" methodname="SyncListGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1414580088" result="Passed" start-time="2020-07-30 17:15:25Z" end-time="2020-07-30 17:15:26Z" duration="0.797140" asserts="0">
                <properties />
              </test-case>
              <test-case id="2073" name="SyncListGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritance" methodname="SyncListGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="378337951" result="Passed" start-time="2020-07-30 17:15:26Z" end-time="2020-07-30 17:15:27Z" duration="0.798447" asserts="0">
                <properties />
              </test-case>
              <test-case id="2074" name="SyncListGenericInheritanceWithMultipleGeneric" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritanceWithMultipleGeneric" methodname="SyncListGenericInheritanceWithMultipleGeneric" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="760091709" result="Passed" start-time="2020-07-30 17:15:27Z" end-time="2020-07-30 17:15:28Z" duration="0.798286" asserts="0">
                <properties />
              </test-case>
              <test-case id="2090" name="SyncListGenericStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericStructWithCustomMethods" methodname="SyncListGenericStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="261279355" result="Passed" start-time="2020-07-30 17:15:28Z" end-time="2020-07-30 17:15:29Z" duration="0.798328" asserts="0">
                <properties />
              </test-case>
              <test-case id="2075" name="SyncListInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritance" methodname="SyncListInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="970811218" result="Passed" start-time="2020-07-30 17:15:29Z" end-time="2020-07-30 17:15:29Z" duration="0.799112" asserts="0">
                <properties />
              </test-case>
              <test-case id="2093" name="SyncListInheritanceWithOverrides" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritanceWithOverrides" methodname="SyncListInheritanceWithOverrides" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1102638896" result="Passed" start-time="2020-07-30 17:15:29Z" end-time="2020-07-30 17:15:30Z" duration="0.798319" asserts="0">
                <properties />
              </test-case>
              <test-case id="2092" name="SyncListInterfaceWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInterfaceWithCustomMethods" methodname="SyncListInterfaceWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1433526519" result="Passed" start-time="2020-07-30 17:15:30Z" end-time="2020-07-30 17:15:31Z" duration="0.797801" asserts="0">
                <properties />
              </test-case>
              <test-case id="2076" name="SyncListMissingParamlessCtor" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtor" methodname="SyncListMissingParamlessCtor" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="746621623" result="Passed" start-time="2020-07-30 17:15:31Z" end-time="2020-07-30 17:15:32Z" duration="0.799532" asserts="0">
                <properties />
              </test-case>
              <test-case id="2077" name="SyncListMissingParamlessCtorManuallyInitialized" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtorManuallyInitialized" methodname="SyncListMissingParamlessCtorManuallyInitialized" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1391818792" result="Passed" start-time="2020-07-30 17:15:32Z" end-time="2020-07-30 17:15:33Z" duration="0.797772" asserts="0">
                <properties />
              </test-case>
              <test-case id="2079" name="SyncListNestedInAbstractClass" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClass" methodname="SyncListNestedInAbstractClass" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="902828481" result="Passed" start-time="2020-07-30 17:15:33Z" end-time="2020-07-30 17:15:33Z" duration="0.797610" asserts="0">
                <properties />
              </test-case>
              <test-case id="2080" name="SyncListNestedInAbstractClassWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClassWithInvalid" methodname="SyncListNestedInAbstractClassWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1691725307" result="Passed" start-time="2020-07-30 17:15:33Z" end-time="2020-07-30 17:15:34Z" duration="0.798032" asserts="0">
                <properties />
              </test-case>
              <test-case id="2081" name="SyncListNestedInStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStruct" methodname="SyncListNestedInStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="846131516" result="Passed" start-time="2020-07-30 17:15:34Z" end-time="2020-07-30 17:15:35Z" duration="0.798232" asserts="0">
                <properties />
              </test-case>
              <test-case id="2082" name="SyncListNestedInStructWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStructWithInvalid" methodname="SyncListNestedInStructWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="55670680" result="Passed" start-time="2020-07-30 17:15:35Z" end-time="2020-07-30 17:15:36Z" duration="0.797646" asserts="0">
                <properties />
              </test-case>
              <test-case id="2078" name="SyncListNestedStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedStruct" methodname="SyncListNestedStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1135089826" result="Passed" start-time="2020-07-30 17:15:36Z" end-time="2020-07-30 17:15:37Z" duration="0.798760" asserts="0">
                <properties />
              </test-case>
              <test-case id="2083" name="SyncListStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStruct" methodname="SyncListStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="3223316" result="Passed" start-time="2020-07-30 17:15:37Z" end-time="2020-07-30 17:15:37Z" duration="0.798346" asserts="0">
                <properties />
              </test-case>
              <test-case id="2084" name="SyncListStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomDeserializeOnly" methodname="SyncListStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1728913777" result="Passed" start-time="2020-07-30 17:15:37Z" end-time="2020-07-30 17:15:38Z" duration="0.797804" asserts="0">
                <properties />
              </test-case>
              <test-case id="2085" name="SyncListStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomMethods" methodname="SyncListStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="500044123" result="Passed" start-time="2020-07-30 17:15:38Z" end-time="2020-07-30 17:15:39Z" duration="0.799088" asserts="0">
                <properties />
              </test-case>
              <test-case id="2086" name="SyncListStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomSerializeOnly" methodname="SyncListStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="775444901" result="Passed" start-time="2020-07-30 17:15:39Z" end-time="2020-07-30 17:15:40Z" duration="0.797457" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2095" name="WeaverSyncSetTests" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-07-30 17:15:40Z" end-time="2020-07-30 17:15:45Z" duration="5.083890" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2096" name="SyncSet" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSet" methodname="SyncSet" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1222500561" result="Passed" start-time="2020-07-30 17:15:40Z" end-time="2020-07-30 17:15:41Z" duration="0.783831" asserts="0">
                <properties />
              </test-case>
              <test-case id="2097" name="SyncSetByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetByteValid" methodname="SyncSetByteValid" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="47157602" result="Passed" start-time="2020-07-30 17:15:41Z" end-time="2020-07-30 17:15:42Z" duration="0.798688" asserts="0">
                <properties />
              </test-case>
              <test-case id="2098" name="SyncSetGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericAbstractInheritance" methodname="SyncSetGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1686979126" result="Passed" start-time="2020-07-30 17:15:42Z" end-time="2020-07-30 17:15:42Z" duration="0.798103" asserts="0">
                <properties />
              </test-case>
              <test-case id="2099" name="SyncSetGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericInheritance" methodname="SyncSetGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1941640794" result="Passed" start-time="2020-07-30 17:15:43Z" end-time="2020-07-30 17:15:43Z" duration="0.798629" asserts="0">
                <properties />
              </test-case>
              <test-case id="2100" name="SyncSetInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetInheritance" methodname="SyncSetInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1736741296" result="Passed" start-time="2020-07-30 17:15:43Z" end-time="2020-07-30 17:15:44Z" duration="0.798713" asserts="0">
                <properties />
              </test-case>
              <test-case id="2101" name="SyncSetStruct" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetStruct" methodname="SyncSetStruct" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1698334448" result="Passed" start-time="2020-07-30 17:15:44Z" end-time="2020-07-30 17:15:45Z" duration="0.798047" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2102" name="WeaverSyncVarHookTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2020-07-30 17:15:45Z" end-time="2020-07-30 17:15:54Z" duration="8.994972" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2113" name="ErrorForWrongTypeNewParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeNewParameter" methodname="ErrorForWrongTypeNewParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="188513535" result="Passed" start-time="2020-07-30 17:15:45Z" end-time="2020-07-30 17:15:46Z" duration="0.783672" asserts="0">
                <properties />
              </test-case>
              <test-case id="2112" name="ErrorForWrongTypeOldParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeOldParameter" methodname="ErrorForWrongTypeOldParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1296409989" result="Passed" start-time="2020-07-30 17:15:46Z" end-time="2020-07-30 17:15:47Z" duration="0.698538" asserts="0">
                <properties />
              </test-case>
              <test-case id="2110" name="ErrorWhenNoHookFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookFound" methodname="ErrorWhenNoHookFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1943963573" result="Passed" start-time="2020-07-30 17:15:47Z" end-time="2020-07-30 17:15:47Z" duration="0.799056" asserts="0">
                <properties />
              </test-case>
              <test-case id="2111" name="ErrorWhenNoHookWithCorrectParametersFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookWithCorrectParametersFound" methodname="ErrorWhenNoHookWithCorrectParametersFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="2011646589" result="Passed" start-time="2020-07-30 17:15:48Z" end-time="2020-07-30 17:15:48Z" duration="0.797513" asserts="0">
                <properties />
              </test-case>
              <test-case id="2106" name="FindsHookWithGameObjects" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithGameObjects" methodname="FindsHookWithGameObjects" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1088025933" result="Passed" start-time="2020-07-30 17:15:48Z" end-time="2020-07-30 17:15:49Z" duration="0.798550" asserts="0">
                <properties />
              </test-case>
              <test-case id="2107" name="FindsHookWithNetworkIdentity" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithNetworkIdentity" methodname="FindsHookWithNetworkIdentity" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1246884022" result="Passed" start-time="2020-07-30 17:15:49Z" end-time="2020-07-30 17:15:50Z" duration="0.798465" asserts="0">
                <properties />
              </test-case>
              <test-case id="2108" name="FindsHookWithOtherOverloadsInOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInOrder" methodname="FindsHookWithOtherOverloadsInOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="264484845" result="Passed" start-time="2020-07-30 17:15:50Z" end-time="2020-07-30 17:15:51Z" duration="0.797876" asserts="0">
                <properties />
              </test-case>
              <test-case id="2109" name="FindsHookWithOtherOverloadsInReverseOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInReverseOrder" methodname="FindsHookWithOtherOverloadsInReverseOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="2083252483" result="Passed" start-time="2020-07-30 17:15:51Z" end-time="2020-07-30 17:15:51Z" duration="0.798655" asserts="0">
                <properties />
              </test-case>
              <test-case id="2103" name="FindsPrivateHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPrivateHook" methodname="FindsPrivateHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1017022123" result="Passed" start-time="2020-07-30 17:15:52Z" end-time="2020-07-30 17:15:52Z" duration="0.798524" asserts="0">
                <properties />
              </test-case>
              <test-case id="2104" name="FindsPublicHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPublicHook" methodname="FindsPublicHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1778697972" result="Passed" start-time="2020-07-30 17:15:52Z" end-time="2020-07-30 17:15:53Z" duration="0.798319" asserts="0">
                <properties />
              </test-case>
              <test-case id="2105" name="FindsStaticHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsStaticHook" methodname="FindsStaticHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="63665642" result="Passed" start-time="2020-07-30 17:15:53Z" end-time="2020-07-30 17:15:54Z" duration="0.798970" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2114" name="WeaverSyncVarTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-07-30 17:15:54Z" end-time="2020-07-30 17:16:01Z" duration="7.391104" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2121" name="SyncVarsCantBeArray" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsCantBeArray" methodname="SyncVarsCantBeArray" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="289379773" result="Passed" start-time="2020-07-30 17:15:54Z" end-time="2020-07-30 17:15:55Z" duration="0.766458" asserts="0">
                <properties />
              </test-case>
              <test-case id="2116" name="SyncVarsDerivedNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDerivedNetworkBehaviour" methodname="SyncVarsDerivedNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="2750951" result="Passed" start-time="2020-07-30 17:15:55Z" end-time="2020-07-30 17:15:56Z" duration="0.798216" asserts="0">
                <properties />
              </test-case>
              <test-case id="2120" name="SyncVarsDifferentModule" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDifferentModule" methodname="SyncVarsDifferentModule" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1084518568" result="Passed" start-time="2020-07-30 17:15:56Z" end-time="2020-07-30 17:15:57Z" duration="0.798206" asserts="0">
                <properties />
              </test-case>
              <test-case id="2118" name="SyncVarsGenericParam" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsGenericParam" methodname="SyncVarsGenericParam" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1047391885" result="Passed" start-time="2020-07-30 17:15:57Z" end-time="2020-07-30 17:15:57Z" duration="0.799020" asserts="0">
                <properties />
              </test-case>
              <test-case id="2119" name="SyncVarsInterface" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsInterface" methodname="SyncVarsInterface" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1639424017" result="Passed" start-time="2020-07-30 17:15:57Z" end-time="2020-07-30 17:15:58Z" duration="0.797958" asserts="0">
                <properties />
              </test-case>
              <test-case id="2123" name="SyncVarsMoreThan63" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsMoreThan63" methodname="SyncVarsMoreThan63" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1326646929" result="Passed" start-time="2020-07-30 17:15:58Z" end-time="2020-07-30 17:15:59Z" duration="0.798481" asserts="0">
                <properties />
              </test-case>
              <test-case id="2117" name="SyncVarsStatic" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsStatic" methodname="SyncVarsStatic" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1571392765" result="Passed" start-time="2020-07-30 17:15:59Z" end-time="2020-07-30 17:16:00Z" duration="0.697970" asserts="0">
                <properties />
              </test-case>
              <test-case id="2122" name="SyncVarsSyncList" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsSyncList" methodname="SyncVarsSyncList" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="632654096" result="Passed" start-time="2020-07-30 17:16:00Z" end-time="2020-07-30 17:16:00Z" duration="0.798376" asserts="0">
                <properties />
              </test-case>
              <test-case id="2115" name="SyncVarsValid" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsValid" methodname="SyncVarsValid" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1566511080" result="Passed" start-time="2020-07-30 17:16:01Z" end-time="2020-07-30 17:16:01Z" duration="0.798006" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2124" name="WeaverTargetRpcTests" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-07-30 17:16:01Z" end-time="2020-07-30 17:16:09Z" duration="7.294547" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2132" name="AbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.AbstractTargetRpc" methodname="AbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="75152617" result="Passed" start-time="2020-07-30 17:16:02Z" end-time="2020-07-30 17:16:02Z" duration="0.663147" asserts="0">
                <properties />
              </test-case>
              <test-case id="2129" name="ErrorWhenNetworkConnectionIsNotTheFirstParameter" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenNetworkConnectionIsNotTheFirstParameter" methodname="ErrorWhenNetworkConnectionIsNotTheFirstParameter" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1200567756" result="Passed" start-time="2020-07-30 17:16:02Z" end-time="2020-07-30 17:16:03Z" duration="0.697985" asserts="0">
                <properties />
              </test-case>
              <test-case id="2126" name="ErrorWhenTargetRpcIsStatic" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenTargetRpcIsStatic" methodname="ErrorWhenTargetRpcIsStatic" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="726383099" result="Passed" start-time="2020-07-30 17:16:03Z" end-time="2020-07-30 17:16:04Z" duration="0.797568" asserts="0">
                <properties />
              </test-case>
              <test-case id="2133" name="OverrideAbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideAbstractTargetRpc" methodname="OverrideAbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="885826122" result="Passed" start-time="2020-07-30 17:16:04Z" end-time="2020-07-30 17:16:05Z" duration="0.798100" asserts="0">
                <properties />
              </test-case>
              <test-case id="2131" name="OverrideVirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideVirtualTargetRpc" methodname="OverrideVirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1093421279" result="Passed" start-time="2020-07-30 17:16:05Z" end-time="2020-07-30 17:16:05Z" duration="0.799698" asserts="0">
                <properties />
              </test-case>
              <test-case id="2128" name="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" methodname="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="976185273" result="Passed" start-time="2020-07-30 17:16:05Z" end-time="2020-07-30 17:16:06Z" duration="0.797582" asserts="0">
                <properties />
              </test-case>
              <test-case id="2127" name="TargetRpcCanSkipNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanSkipNetworkConnection" methodname="TargetRpcCanSkipNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="282559676" result="Passed" start-time="2020-07-30 17:16:06Z" end-time="2020-07-30 17:16:07Z" duration="0.798305" asserts="0">
                <properties />
              </test-case>
              <test-case id="2125" name="TargetRpcValid" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcValid" methodname="TargetRpcValid" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1040334922" result="Passed" start-time="2020-07-30 17:16:07Z" end-time="2020-07-30 17:16:08Z" duration="0.798975" asserts="0">
                <properties />
              </test-case>
              <test-case id="2130" name="VirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.VirtualTargetRpc" methodname="VirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="35277237" result="Passed" start-time="2020-07-30 17:16:08Z" end-time="2020-07-30 17:16:09Z" duration="0.799107" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="2802" name="Telepathy" fullname="Telepathy" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-07-30 17:16:09Z" end-time="2020-07-30 17:16:10Z" duration="0.207273" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
        <properties />
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="2803" name="Tests" fullname="Telepathy.Tests" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-07-30 17:16:09Z" end-time="2020-07-30 17:16:10Z" duration="0.130891" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
          <properties />
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestFixture" id="1924" name="TransportTest" fullname="Telepathy.Tests.TransportTest" classname="Telepathy.Tests.TransportTest" runstate="Ignored" testcasecount="17" result="Skipped" label="Ignored" site="SetUp" start-time="2020-07-30 17:16:10Z" end-time="2020-07-30 17:16:10Z" duration="0.021154" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
            <properties>
              <property name="Category" value="Telepathy" />
              <property name="_SKIPREASON" value="Telepathy tests are flaky" />
            </properties>
            <reason>
              <message><![CDATA[Telepathy tests are flaky]]></message>
            </reason>
            <test-case id="1937" name="AllocationAttackTest" fullname="Telepathy.Tests.TransportTest.AllocationAttackTest" methodname="AllocationAttackTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1266342184" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1931" name="ClientKickedCleanupTest" fullname="Telepathy.Tests.TransportTest.ClientKickedCleanupTest" methodname="ClientKickedCleanupTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="16385672" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1929" name="ClientTest" fullname="Telepathy.Tests.TransportTest.ClientTest" methodname="ClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1068932455" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1934" name="ConnectIPv4Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv4Test" methodname="ConnectIPv4Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1889882299" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1935" name="ConnectIPv6Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv6Test" methodname="ConnectIPv6Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2137543024" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1926" name="DisconnectImmediateTest" fullname="Telepathy.Tests.TransportTest.DisconnectImmediateTest" methodname="DisconnectImmediateTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="533923427" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1932" name="GetConnectionInfoTest" fullname="Telepathy.Tests.TransportTest.GetConnectionInfoTest" methodname="GetConnectionInfoTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="184460752" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1941" name="IntToBytesBigNonAllocTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigNonAllocTest" methodname="IntToBytesBigNonAllocTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="491002827" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1940" name="IntToBytesBigTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigTest" methodname="IntToBytesBigTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="711406539" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1936" name="LargeMessageTest" fullname="Telepathy.Tests.TransportTest.LargeMessageTest" methodname="LargeMessageTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="497635304" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1925" name="NextConnectionIdTest" fullname="Telepathy.Tests.TransportTest.NextConnectionIdTest" methodname="NextConnectionIdTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="254428407" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1933" name="ParseLocalHostTest" fullname="Telepathy.Tests.TransportTest.ParseLocalHostTest" methodname="ParseLocalHostTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1949533996" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1930" name="ServerDisconnectClientTest" fullname="Telepathy.Tests.TransportTest.ServerDisconnectClientTest" methodname="ServerDisconnectClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1895384000" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1939" name="ServerStartStopRepeatedTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopRepeatedTest" methodname="ServerStartStopRepeatedTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2106867951" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1938" name="ServerStartStopTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopTest" methodname="ServerStartStopTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="559777624" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1928" name="ServerTest" fullname="Telepathy.Tests.TransportTest.ServerTest" methodname="ServerTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="621628107" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1927" name="SpamSendTest" fullname="Telepathy.Tests.TransportTest.SpamSendTest" methodname="SpamSendTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="655800873" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>